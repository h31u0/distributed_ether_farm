{
    "contractName": "SlotMarket",
    "abi": [
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "approved",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Approval",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "ApprovalForAll",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "previousOwner",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "OwnershipTransferred",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "ad",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "bytes32",
                    "name": "status",
                    "type": "bytes32"
                }
            ],
            "name": "TradeStatusChange",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "indexed": true,
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "Transfer",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "addr",
                    "type": "address"
                }
            ],
            "name": "createSlotEvent",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "cropID",
                    "type": "uint256"
                }
            ],
            "name": "deleteCropList",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "cropID",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "grow_time",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "price",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "exp",
                    "type": "uint256"
                }
            ],
            "name": "updateCropList",
            "type": "event"
        },
        {
            "anonymous": false,
            "inputs": [
                {
                    "indexed": true,
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "slotID",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "cropID",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "grow_time",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "price",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "dry_time",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "grass_time",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "bool",
                    "name": "stealed",
                    "type": "bool"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "exp",
                    "type": "uint256"
                },
                {
                    "indexed": false,
                    "internalType": "uint256",
                    "name": "balance",
                    "type": "uint256"
                }
            ],
            "name": "updateSlot",
            "type": "event"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "OwnerMoneyCount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "name": "OwnerSlotCount",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_slotID",
                    "type": "uint256"
                }
            ],
            "name": "UpgradeSlot",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "friend",
                    "type": "address"
                }
            ],
            "name": "addFriend",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_exp",
                    "type": "uint256"
                }
            ],
            "name": "addInLevelList",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_slotID",
                    "type": "uint256"
                }
            ],
            "name": "approve",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_owner",
                    "type": "address"
                }
            ],
            "name": "balanceOf",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "_balance",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_num",
                    "type": "uint256"
                }
            ],
            "name": "buySlot",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_trade",
                    "type": "uint256"
                }
            ],
            "name": "cancelTrade",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "createFarm",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "cropsList",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "cropID",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "grow_time",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "price",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "dry_time",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "grass_time",
                    "type": "uint256"
                },
                {
                    "internalType": "bool",
                    "name": "stealed",
                    "type": "bool"
                },
                {
                    "internalType": "uint256",
                    "name": "exp",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_cropID",
                    "type": "uint256"
                }
            ],
            "name": "delInCropsList",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "friend",
                    "type": "address"
                }
            ],
            "name": "deleteFriend",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_trade",
                    "type": "uint256"
                }
            ],
            "name": "executeTrade",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "friendsDict",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "getApproved",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_owner",
                    "type": "address"
                }
            ],
            "name": "getFarmByOwner",
            "outputs": [
                {
                    "internalType": "uint256[]",
                    "name": "",
                    "type": "uint256[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                }
            ],
            "name": "getFriendsByOwner",
            "outputs": [
                {
                    "internalType": "address[]",
                    "name": "",
                    "type": "address[]"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "exp",
                    "type": "uint256"
                }
            ],
            "name": "getLevel",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_trade",
                    "type": "uint256"
                }
            ],
            "name": "getTrade",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes32",
                    "name": "",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getTradeCounter",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_slotID",
                    "type": "uint256"
                }
            ],
            "name": "harvest",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "initLevelList",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "owner",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                }
            ],
            "name": "isApprovedForAll",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "levelList",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_cropID",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_grow_time",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_price",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_exp",
                    "type": "uint256"
                }
            ],
            "name": "modInCropsList",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "name",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_item",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_price",
                    "type": "uint256"
                }
            ],
            "name": "openTrade",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "owner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_slotID",
                    "type": "uint256"
                }
            ],
            "name": "ownerOf",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "_owner",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_cropID",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "_slotID",
                    "type": "uint256"
                }
            ],
            "name": "plant",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "renounceOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes",
                    "name": "_data",
                    "type": "bytes"
                }
            ],
            "name": "safeTransferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "operator",
                    "type": "address"
                },
                {
                    "internalType": "bool",
                    "name": "approved",
                    "type": "bool"
                }
            ],
            "name": "setApprovalForAll",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_fee",
                    "type": "uint256"
                }
            ],
            "name": "setLevelUpFee",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "slotToOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "slots",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "cropID",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "grow_time",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "price",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "dry_time",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "grass_time",
                    "type": "uint256"
                },
                {
                    "internalType": "bool",
                    "name": "stealed",
                    "type": "bool"
                },
                {
                    "internalType": "uint256",
                    "name": "exp",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_slotID",
                    "type": "uint256"
                }
            ],
            "name": "steal",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes4",
                    "name": "interfaceId",
                    "type": "bytes4"
                }
            ],
            "name": "supportsInterface",
            "outputs": [
                {
                    "internalType": "bool",
                    "name": "",
                    "type": "bool"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "symbol",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_slotID",
                    "type": "uint256"
                }
            ],
            "name": "takeOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "tokenId",
                    "type": "uint256"
                }
            ],
            "name": "tokenURI",
            "outputs": [
                {
                    "internalType": "string",
                    "name": "",
                    "type": "string"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "name": "trades",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "poster",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "item",
                    "type": "uint256"
                },
                {
                    "internalType": "uint256",
                    "name": "price",
                    "type": "uint256"
                },
                {
                    "internalType": "bytes32",
                    "name": "status",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_slotID",
                    "type": "uint256"
                }
            ],
            "name": "transfer",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_from",
                    "type": "address"
                },
                {
                    "internalType": "address",
                    "name": "_to",
                    "type": "address"
                },
                {
                    "internalType": "uint256",
                    "name": "_slotID",
                    "type": "uint256"
                }
            ],
            "name": "transferFrom",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "newOwner",
                    "type": "address"
                }
            ],
            "name": "transferOwnership",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_slotID",
                    "type": "uint256"
                }
            ],
            "name": "watering",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "_slotID",
                    "type": "uint256"
                }
            ],
            "name": "weeding",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ad\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"status\",\"type\":\"bytes32\"}],\"name\":\"TradeStatusChange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"createSlotEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cropID\",\"type\":\"uint256\"}],\"name\":\"deleteCropList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cropID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"grow_time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"}],\"name\":\"updateCropList\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"slotID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"cropID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"grow_time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dry_time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"grass_time\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"stealed\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"updateSlot\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"OwnerMoneyCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"OwnerSlotCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slotID\",\"type\":\"uint256\"}],\"name\":\"UpgradeSlot\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"friend\",\"type\":\"address\"}],\"name\":\"addFriend\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_exp\",\"type\":\"uint256\"}],\"name\":\"addInLevelList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_slotID\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_num\",\"type\":\"uint256\"}],\"name\":\"buySlot\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_trade\",\"type\":\"uint256\"}],\"name\":\"cancelTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createFarm\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cropsList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cropID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grow_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dry_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grass_time\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"stealed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cropID\",\"type\":\"uint256\"}],\"name\":\"delInCropsList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"friend\",\"type\":\"address\"}],\"name\":\"deleteFriend\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_trade\",\"type\":\"uint256\"}],\"name\":\"executeTrade\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"friendsDict\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"getFarmByOwner\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"getFriendsByOwner\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"}],\"name\":\"getLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_trade\",\"type\":\"uint256\"}],\"name\":\"getTrade\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTradeCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slotID\",\"type\":\"uint256\"}],\"name\":\"harvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initLevelList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"levelList\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cropID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_grow_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_exp\",\"type\":\"uint256\"}],\"name\":\"modInCropsList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_item\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"openTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slotID\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_cropID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_slotID\",\"type\":\"uint256\"}],\"name\":\"plant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setLevelUpFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"slotToOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"slots\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"cropID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grow_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dry_time\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"grass_time\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"stealed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"exp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slotID\",\"type\":\"uint256\"}],\"name\":\"steal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slotID\",\"type\":\"uint256\"}],\"name\":\"takeOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"trades\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"poster\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"item\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"status\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_slotID\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_slotID\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slotID\",\"type\":\"uint256\"}],\"name\":\"watering\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slotID\",\"type\":\"uint256\"}],\"name\":\"weeding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"cancelTrade(uint256)\":{\"details\":\"Cancels a trade by the poster.\",\"params\":{\"_trade\":\"The trade to be cancelled.\"}},\"executeTrade(uint256)\":{\"details\":\"Executes a trade. Must have approved this contract to transfer the amount of currency specified to the poster. Transfers ownership of the item to the filler.\",\"params\":{\"_trade\":\"The id of an existing trade\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getTrade(uint256)\":{\"details\":\"Returns the details for a trade.\",\"params\":{\"_trade\":\"The id for the trade.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"openTrade(uint256,uint256)\":{\"details\":\"Opens a new trade. Puts _item in escrow.\",\"params\":{\"_item\":\"The id for the item to trade.\",\"_price\":\"The amount of currency for which to trade the item.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Classifieds\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Implements the classifieds board market. The market will be governed by an ERC20 token as currency, and an ERC721 token that represents the ownership of the items being traded. Only ads for selling items are implemented. The item tokenization is responsibility of the ERC721 contract which should encode any item details.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/Cirno/Desktop/distributed_ether_farm-main/contracts/SlotMarket.sol\":\"SlotMarket\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/Cirno/Desktop/distributed_ether_farm-main/contracts/Friend.sol\":{\"keccak256\":\"0x18e010227dc97bf9f4bf8cd581aec1727b7aaae33633f45a8fbd6477dee846bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be5cebce27add5e53db881a809aea6147ab2d6f1456f5378bd0bbc98a697996b\",\"dweb:/ipfs/QmYcyyChojUqb18MagrhZg41RbM6ATyEQB9inB7JN2QuD4\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/contracts/SlotFactory.sol\":{\"keccak256\":\"0x7730de89cafa1ec451072b61b6ac1bd1dac3afa705bc3e1ca210d0f7f3c65073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afac6f30f993c22d72f5785efa0626f4d3c53f98138f794ab8499af269bfe01e\",\"dweb:/ipfs/QmRvFjU7Lf7SchbT13FxFhuaSfXce4QJMxL2tYbRGgL7i1\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/contracts/SlotManagement.sol\":{\"keccak256\":\"0x2ee8b0b5fd74d9ac4c93ecc22d344551bc54e7facbf46e059343d017febf07a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3d566acb1ad73ecf3168a4d08e3fd01ea164a568624278b2b746b8ee9d4e2aea\",\"dweb:/ipfs/Qmf6yLKihYXLfrT4SJnC3uAAkbQY11HWAGFPa9VBZTR4Mf\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/contracts/SlotMarket.sol\":{\"keccak256\":\"0x8284993e159e516eade1aaa70fc9dce0ed03c53a5072cda6ee69ee7f2fa024ae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d09143b9f55d08f40ef03da71a9ab6b4eb760de8e700c8441a67c491faa01781\",\"dweb:/ipfs/Qmd5tXzWopCa6gQgG9kBfnnYFBCXGUBqJPvq4LvomSLPZe\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/contracts/SlotOwnership.sol\":{\"keccak256\":\"0xae0b0e9ea5877f2234df57c79976fdaf4c3cc09811ab6aee851bf83797f36e75\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d73377e35c1682d3467ea1377ac3d332a9f409575a59fced748b62ec1b9210b3\",\"dweb:/ipfs/QmRbyK8XL6Xaiuw5BdiMiCfrWdxm8WdxB6CH5L7PwothRF\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/contracts/SlotUpgrade.sol\":{\"keccak256\":\"0xbfbc952641ffcbcc73ab75f997ebda5fdf5b23e42c3b61f2a08b2cde027dffae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://37f3d79a3bc734d829e185e519ff01139c746ed6fe8a0e1dcded7abfed2084d1\",\"dweb:/ipfs/QmccPWgtgnq9xus4tT3DHS8Me4H9fchvAA1vKJJg3kE3Pp\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/contracts/SlotUtils.sol\":{\"keccak256\":\"0x3a3f9135f3db9d9bdb508707d3897e012a6d041268196fbdd93160532ac994cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6de3b0f2f1cdc05152ba7750c68c62bc0296e9d91a644fa65c56a33789399eac\",\"dweb:/ipfs/QmYG7Gwygfh3p61AxVEJw9uxCcckWw99SWm7uNLm9KopBz\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7\",\"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x8d1cabca557cb77d97d801d674f0dacc33659e1430cdd34f91ae5d033fc3d93f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://379879e94763b61c652f914da987a603fb1fec35645a1d6b8022413cf1c3a467\",\"dweb:/ipfs/QmVkFoHVN6XWztbJDHrWfMCRPV4QsbFGj6QPZYeMjQRfhr\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xc1c941ad1e580b4623007305921efe2f26fc7320a4edc226234dd707c658a428\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://473e11d739868e0d9f48254ccf84ba63290d6a2321d59a37b74c244a27f9cad7\",\"dweb:/ipfs/QmUGzDmecP936jzgM7SYyGwR1YgBGsveoHHJTbDfB8jbGF\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x96877bb2eb8ca360e949ee1bd77b47a14e92e42f79897c350f088f87a3c231d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48593d699a4ef6b5bd2efb20d37320e69303fd27d4b59a2b6b8a8e563e608456\",\"dweb:/ipfs/QmdAPS8uLrzPJEeFZyJVkwTtaL3KB9jo9wJm1UcoJP55wT\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xccb7e6475afcb1c5cb13b3fbf1329c10b93620a9b66393388066683915271a78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df5776161e3226ac31bfb919dfe5f42e173a08293fadb4ffa90ffb55e76869d7\",\"dweb:/ipfs/QmXtKfvWj1v6oha8urbnw4RmjSpmQjZsGGqK5qk5trK4nH\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0xb8d11e77eb1ed34a33720edb551d7d6a6b0eee2bfaa40a7024020e1fdf879b16\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c583283c838cc624a96a69eaa823fa92ac5294ec88d417e266c09ea091e0ae62\",\"dweb:/ipfs/QmNdzitXaFADaxooWpB4WsckkDyr4j6GQRxBjyKXsvEeXv\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395\",\"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x456e9b3a2bfe189b5249857f624f4139e59331db518483b456c4e587a20552e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1123c9545decc48a011370ebab4bf53dda98524fa21f9498e68851ba8f0ffc0f\",\"dweb:/ipfs/QmUpgMg8EFDnv87ePKUjXxXpJT3qwHRj9VDNSnRxu7T9sy\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d10e1d9b26042424789246603906ad06143bf9a928f4e99de8b5e3bdc662f549\",\"dweb:/ipfs/Qmejonoaj5MLekPus229rJQHcC6E9dz2xorjHJR84fMfmn\"]},\"/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://796ab6e88af7bf0e78def0f059310c903af6a312b565344e0ff524a0f26e81c6\",\"dweb:/ipfs/QmcsVgLgzWdor3UnAztUkXKNGcysm1MPneWksF72AvnwBx\"]}},\"version\":1}",
    "bytecode": "608060405266038d7ea4c68000600e5560006011553480156200002157600080fd5b506040518060400160405280600481526020016314db1bdd60e21b8152506040518060400160405280600381526020016246414d60e81b81525060006200006d620000ef60201b60201c565b600580546001600160a01b0319166001600160a01b038316908117909155604051919250906000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508151620000d0906008906020850190620000f3565b508051620000e6906009906020840190620000f3565b505050620001d6565b3390565b828054620001019062000199565b90600052602060002090601f01602090048101928262000125576000855562000170565b82601f106200014057805160ff191683800117855562000170565b8280016001018555821562000170579182015b828111156200017057825182559160200191906001019062000153565b506200017e92915062000182565b5090565b5b808211156200017e576000815560010162000183565b600281046001821680620001ae57607f821691505b60208210811415620001d057634e487b7160e01b600052602260045260246000fd5b50919050565b6134a080620001e66000396000f3fe6080604052600436106102c95760003560e01c806386481d4011610175578063ab2874cb116100dc578063d13e736a11610095578063e985e9c51161006f578063e985e9c514610896578063eb320915146108b6578063f2fde38b146108d6578063fe41146b146108f6576102c9565b8063d13e736a14610829578063ddc6326214610856578063e1928ac914610876576102c9565b8063ab2874cb14610776578063b2e6ceeb14610789578063b88d4fde146107a9578063b99c6e0a146107c9578063c87b56dd146107e9578063ccf670f814610809576102c9565b80639bcf5f0c1161012e5780639bcf5f0c146106b6578063a22cb465146106d6578063a5c14ec7146106f6578063a7a624e014610716578063a9059cbb14610736578063a9bf928f14610756576102c9565b806386481d401461060c5780638871c9c51461062c5780638da5cb5b1461064c57806392658a281461066157806395d89b41146106815780639881559414610696576102c9565b806323b872dd11610234578063575c25b0116101ed5780636352211e116101c75780636352211e1461059757806370a08231146105b7578063715018a6146105d757806372e6eaa6146105ec576102c9565b8063575c25b01461051d578063580405ba1461054a5780636099804d14610577576102c9565b806323b872dd1461046257806327adc95e146104825780632db25e0514610495578063387dd9e9146104b55780633ccfd60b146104e857806342842e0e146104fd576102c9565b80630c10e499116102865780630c10e499146103a85780630c493fba146103c85780630d79e835146103e857806310e96da5146103fd5780631d5ec3cb1461041d5780631e6c598e14610432576102c9565b806301ffc9a7146102ce57806302d2838b1461030457806306fdde0314610319578063081812fc1461033b578063095ea7b31461036857806309ec6cc714610388575b600080fd5b3480156102da57600080fd5b506102ee6102e9366004612cd1565b61090b565b6040516102fb9190612eec565b60405180910390f35b610317610312366004612d09565b610953565b005b34801561032557600080fd5b5061032e610a86565b6040516102fb9190612ef7565b34801561034757600080fd5b5061035b610356366004612d09565b610b18565b6040516102fb9190612df0565b34801561037457600080fd5b50610317610383366004612ca8565b610b5b565b34801561039457600080fd5b506103176103a3366004612d09565b610bda565b3480156103b457600080fd5b5061035b6103c3366004612d09565b610ccf565b3480156103d457600080fd5b506103176103e3366004612d21565b610cea565b3480156103f457600080fd5b50610317610dbc565b34801561040957600080fd5b506102ee610418366004612b35565b610e59565b34801561042957600080fd5b50610317610f19565b34801561043e57600080fd5b5061045261044d366004612d09565b610f3d565b6040516102fb9493929190612e41565b34801561046e57600080fd5b5061031761047d366004612b67565b610f6e565b610317610490366004612d09565b610fa4565b3480156104a157600080fd5b506104526104b0366004612d09565b611074565b3480156104c157600080fd5b506104d56104d0366004612d09565b6110c7565b6040516102fb97969594939291906132b1565b3480156104f457600080fd5b50610317611119565b34801561050957600080fd5b50610317610518366004612b67565b61119b565b34801561052957600080fd5b5061053d610538366004612b1b565b6111bb565b6040516102fb9190612eb4565b34801561055657600080fd5b5061056a610565366004612b1b565b6112af565b6040516102fb9190613201565b34801561058357600080fd5b50610317610592366004612d09565b6112c1565b3480156105a357600080fd5b5061035b6105b2366004612d09565b6113b6565b3480156105c357600080fd5b5061056a6105d2366004612b1b565b6113d1565b3480156105e357600080fd5b506103176113ec565b3480156105f857600080fd5b506102ee610607366004612b35565b611475565b34801561061857600080fd5b5061056a610627366004612d09565b6114ee565b34801561063857600080fd5b5061056a610647366004612b1b565b611552565b34801561065857600080fd5b5061035b611564565b34801561066d57600080fd5b5061031761067c366004612d21565b611573565b34801561068d57600080fd5b5061032e611719565b3480156106a257600080fd5b5061056a6106b1366004612d09565b611728565b3480156106c257600080fd5b506103176106d1366004612d09565b611749565b3480156106e257600080fd5b506103176106f1366004612c6e565b611860565b34801561070257600080fd5b50610317610711366004612d09565b61192e565b34801561072257600080fd5b5061035b610731366004612ca8565b611a17565b34801561074257600080fd5b50610317610751366004612ca8565b611a4f565b34801561076257600080fd5b506104d5610771366004612d09565b611a7f565b610317610784366004612d09565b611ac0565b34801561079557600080fd5b506103176107a4366004612d09565b611ae2565b3480156107b557600080fd5b506103176107c4366004612ba2565b611b21565b3480156107d557600080fd5b506103176107e4366004612d09565b611b5a565b3480156107f557600080fd5b5061032e610804366004612d09565b611bde565b34801561081557600080fd5b50610317610824366004612d09565b611c61565b34801561083557600080fd5b50610849610844366004612b1b565b611ca5565b6040516102fb9190612e67565b34801561086257600080fd5b50610317610871366004612d09565b611d19565b34801561088257600080fd5b50610317610891366004612d42565b611e73565b3480156108a257600080fd5b506102ee6108b1366004612b35565b611f72565b3480156108c257600080fd5b506103176108d1366004612d09565b611fa0565b3480156108e257600080fd5b506103176108f1366004612b1b565b612063565b34801561090257600080fd5b5061056a612124565b60006001600160e01b031982166380ac58cd60e01b148061093c57506001600160e01b03198216635b5e139f60e01b145b8061094b575061094b8261212a565b90505b919050565b600081815260106020908152604091829020825160808101845281546001600160a01b03168152600182015492810192909252600281015492820192909252600390910154606082018190526327b832b760e11b146109cd5760405162461bcd60e51b81526004016109c490612fa2565b60405180910390fd5b806040015134146109dd57600080fd5b805160408083015190516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610a1a573d6000803e3d6000fd5b50610a2a30338360200151610f6e565b6000828152601060205260409081902067115e1958dd5d195960c21b600390910155517f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf90610a7a90849061324b565b60405180910390a15050565b606060088054610a9590613388565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac190613388565b8015610b0e5780601f10610ae357610100808354040283529160200191610b0e565b820191906000526020600020905b815481529060010190602001808311610af157829003601f168201915b5050505050905090565b6000610b2382612143565b610b3f5760405162461bcd60e51b81526004016109c4906130e0565b506000908152600c60205260409020546001600160a01b031690565b60008181526002602052604090205481906001600160a01b03163314610b8057600080fd5b6000828152600f602052604080822080546001600160a01b0319166001600160a01b0387169081179091559051849233917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a4505050565b600081815260106020908152604091829020825160808101845281546001600160a01b03168082526001830154938201939093526002820154938101939093526003015460608301523314610c415760405162461bcd60e51b81526004016109c490612fce565b80606001516327b832b760e11b14610c6b5760405162461bcd60e51b81526004016109c490612fa2565b610c7e3082600001518360200151610f6e565b600082815260106020526040908190206810d85b98d95b1b195960ba1b600390910155517f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf90610a7a908490613265565b6002602052600090815260409020546001600160a01b031681565b610cf5333084610f6e565b6040805160808101825233815260208082018581528284018581526327b832b760e11b606085019081526011805460009081526010909552958420945185546001600160a01b0319166001600160a01b0390911617855591516001808601919091559051600285015590516003909301929092558254919291610d799084906132e3565b90915550506011547f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf90610daf9060019061332e565b604051610a7a9190613280565b610dc4612160565b6001600160a01b0316610dd5611564565b6001600160a01b031614610dfb5760405162461bcd60e51b81526004016109c49061312c565b60075415610e0857600080fd5b600780546001818101835560008381527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68892830155825480820184556005908301558254908101909255600a910155565b6000610e658383612164565b80610e815750816001600160a01b0316836001600160a01b0316145b80610e9357506001600160a01b038316155b80610ea557506001600160a01b038216155b15610eb257506000610f13565b506001600160a01b038083166000818152602081815260408083208054600181810183559185528385200180549688166001600160a01b03199788168117909155845290832080548083018255908452919092200180549093169091179091555b92915050565b3360009081526004602052604090205415610f3357600080fd5b610f3b612205565b565b60106020526000908152604090208054600182015460028301546003909301546001600160a01b0390921692909184565b60008181526002602052604090205481906001600160a01b03163314610f9357600080fd5b610f9e848484612224565b50505050565b600e543414610fb257600080fd5b600060018281548110610fd557634e487b7160e01b600052603260045260246000fd5b60009182526020909120600780549202019150610ff49060019061332e565b61100182600601546114ee565b1061100b57600080fd5b600761101a82600601546114ee565b8154811061103857634e487b7160e01b600052603260045260246000fd5b6000918252602082200154600683015560405133917ffa75433b62fa9aa3569a596aca6569a4687697e876289d01131561272e0e904891a25050565b600090815260106020908152604091829020825160808101845281546001600160a01b03168082526001830154938201849052600283015494820185905260039092015460609091018190529093919291565b600181815481106110d757600080fd5b600091825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601549496509294919390929160ff169087565b611121612160565b6001600160a01b0316611132611564565b6001600160a01b0316146111585760405162461bcd60e51b81526004016109c49061312c565b611160611564565b6001600160a01b03166108fc479081150290604051600060405180830381858888f19350505050158015611198573d6000803e3d6000fd5b50565b6111b683838360405180602001604052806000815250611b21565b505050565b6001600160a01b0381166000908152600460205260408120546060919067ffffffffffffffff8111156111fe57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611227578160200160208202803683370190505b5090506000805b6001548110156112a6576000818152600260205260409020546001600160a01b0386811691161415611294578083838151811061127b57634e487b7160e01b600052603260045260246000fd5b602090810291909101015281611290816133c3565b9250505b8061129e816133c3565b91505061122e565b50909392505050565b60036020526000908152604090205481565b6112c9612160565b6001600160a01b03166112da611564565b6001600160a01b0316146113005760405162461bcd60e51b81526004016109c49061312c565b6040805160e08101825260008082526020808301828152838501838152606085018481526080860185815260a0870186815260c088018781528a8852600696879052968990209751885593516001880155915160028701555160038601555160048501555160058401805460ff19169115159190911790559051910155517fda5207af4ca2a8f617e7b6b247ccb5495c765df30e98c115443a569b8ac3d264906113ab908390613201565b60405180910390a150565b6000908152600260205260409020546001600160a01b031690565b6001600160a01b031660009081526004602052604090205490565b6113f4612160565b6001600160a01b0316611405611564565b6001600160a01b03161461142b5760405162461bcd60e51b81526004016109c49061312c565b6005546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580546001600160a01b0319169055565b60006114818383612164565b158061149e5750816001600160a01b0316836001600160a01b0316145b806114b057506001600160a01b038316155b806114c257506001600160a01b038216155b156114cf57506000610f13565b6114d983836122f7565b506114e482846122f7565b5060019392505050565b6000805b600754811015611548576007818154811061151d57634e487b7160e01b600052603260045260246000fd5b906000526020600020015483101561153657905061094e565b80611540816133c3565b9150506114f2565b5050600754919050565b60046020526000908152604090205481565b6005546001600160a01b031690565b60008181526002602052604090205481906001600160a01b0316331461159857600080fd5b6000600183815481106115bb57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702019050806000015460001480156115fe575060008481526006602090815260408083206002015433845260039092529091205410155b801561162b575060008481526006602081905260409091208101549082015461162890600a6132e3565b10155b61163457600080fd5b600084815260066020908152604080832060020154338452600390925282205461165e919061332e565b3360009081526003602090815260408083208490558883526006909152902080548455600180820154908501556002908101549084015560058301805460ff1916905590506116ac8261242a565b6116b582612456565b6116be82612491565b336001600160a01b031660008051602061344b8339815191528587856001015486600201548760030154886004015460008a600601548a60405161170a9998979695949392919061320a565b60405180910390a25050505050565b606060098054610a9590613388565b6007818154811061173857600080fd5b600091825260209091200154905081565b60008181526002602052604090205461176c9033906001600160a01b03166124c7565b61177557600080fd5b60006001828154811061179857634e487b7160e01b600052603260045260246000fd5b906000526020600020906007020190506117b1816124e9565b6117ba57600080fd5b600581015460ff16156117cc57600080fd5b6002810154336000908152600360205260409020546117eb91906132e3565b3360008181526003602081905260409182902093845560058501805460ff19166001908117909155855486820154600288015493880154600489015460068a015498549651979860008051602061344b83398151915298611854988d989697959695929161320a565b60405180910390a25050565b611868612160565b6001600160a01b0316826001600160a01b031614156118995760405162461bcd60e51b81526004016109c490613014565b80600d60006118a6612160565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556118ea612160565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516119229190612eec565b60405180910390a35050565b60008181526002602052604090205481906001600160a01b0316331461195357600080fd5b60006001838154811061197657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060070201905061198f816124e9565b1580156119a057506119a0816124f3565b6119a957600080fd5b6119b281612491565b805460018201546002830154600380850154600486015460068701543360008181526020959095526040808620549051919860008051602061344b83398151915298611a0a988e98929791969095919490939061320a565b60405180910390a2505050565b60006020528160005260406000208181548110611a3357600080fd5b6000918252602090912001546001600160a01b03169150829050565b60008181526002602052604090205481906001600160a01b03163314611a7457600080fd5b6111b6338484612224565b6006602081905260009182526040909120805460018201546002830154600384015460048501546005860154959096015493959294919390929160ff169087565b80600e54611ace919061330f565b3414611ad957600080fd5b611198816124fd565b6000818152600f60205260409020546001600160a01b03163314611b0557600080fd5b6000611b10826113b6565b9050611b1d813384612224565b5050565b611b32611b2c612160565b836126eb565b611b4e5760405162461bcd60e51b81526004016109c4906131b0565b610f9e84848484612770565b60008181526002602052604090205481906001600160a01b03163314611b7f57600080fd5b600060018381548110611ba257634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702019050611bbb816124e9565b158015611bcc5750611bcc816127a3565b611bd557600080fd5b6119b281612456565b6060611be982612143565b611c055760405162461bcd60e51b81526004016109c490613161565b6000611c0f6127ad565b90506000815111611c2f5760405180602001604052806000815250611c5a565b80611c39846127bf565b604051602001611c4a929190612dc1565b6040516020818303038152906040525b9392505050565b611c69612160565b6001600160a01b0316611c7a611564565b6001600160a01b031614611ca05760405162461bcd60e51b81526004016109c49061312c565b600e55565b6001600160a01b03811660009081526020818152604091829020805483518184028101840190945280845260609392830182828015611d0d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611cef575b50505050509050919050565b60008181526002602052604090205481906001600160a01b03163314611d3e57600080fd5b600060018381548110611d6157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702019050611d7a816124e9565b611d8357600080fd5b600181015460038201546002911015611da45780611da0816133c3565b9150505b816001015482600401541115611dc25780611dbe816133c3565b9150505b600582015460ff16611ddc5780611dd8816133c3565b9150505b6000818360020154611dee919061330f565b33600090815260036020526040902054611e0891906132e3565b336000908152600360205260408120829055845590506005821415611e3f57600683018054906000611e39836133c3565b91905055505b6006830154604051339160008051602061344b8339815191529161170a918991600091829182918291829182918c9061320a565b611e7b612160565b6001600160a01b0316611e8c611564565b6001600160a01b031614611eb25760405162461bcd60e51b81526004016109c49061312c565b6040805160e08101825285815260208082018681528284018681526000606085018181526080860182815260a0870183815260c088018a81528d85526006978890529389902097518855945160018801559251600287015551600386015590516004850155905160058401805460ff191691151591909117905551910155517f0a99a7515cce8c21202b55bdd8c634a45cf0fc5ffc970a5faf445f6e2666505790611f64908690869086908690613296565b60405180910390a150505050565b6001600160a01b039182166000908152600d6020908152604080832093909416825291909152205460ff1690565b611fa8612160565b6001600160a01b0316611fb9611564565b6001600160a01b031614611fdf5760405162461bcd60e51b81526004016109c49061312c565b6007541580612025575060078054611ff99060019061332e565b8154811061201757634e487b7160e01b600052603260045260246000fd5b906000526020600020015481115b61202e57600080fd5b600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b61206b612160565b6001600160a01b031661207c611564565b6001600160a01b0316146120a25760405162461bcd60e51b81526004016109c49061312c565b6001600160a01b0381166120c85760405162461bcd60e51b81526004016109c490612f5c565b6005546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b60115490565b6001600160e01b031981166301ffc9a760e01b14919050565b6000908152600a60205260409020546001600160a01b0316151590565b3390565b6000805b6001600160a01b0384166000908152602081905260409020548110156121fb576001600160a01b03841660009081526020819052604090208054829081106121c057634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03848116911614156121e9576001915050610f13565b806121f3816133c3565b915050612168565b5060009392505050565b61220f60066124fd565b33600090815260036020526040902060649055565b6001600160a01b03831660009081526004602052604090205460061061224957600080fd5b6001600160a01b038216600090815260046020526040812080549161226d836133c3565b90915550506001600160a01b038316600090815260046020526040812080549161229683613371565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006123038383612164565b61230f57506000610f13565b600061231b84846128da565b6001600160a01b0385166000908152602081905260409020805491925061234360018361332e565b8154811061236157634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0388811684529183905260409092208054919092169190849081106123ab57634e487b7160e01b600052603260045260246000fd5b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918716815290819052604090208054806123fd57634e487b7160e01b600052603160045260246000fd5b600082815260209020600019908201810180546001600160a01b0319169055019055506001949350505050565b805460009081526006602052604090206001015461244890426132e3565b63ffffffff16600190910155565b61246e428260010154612469919061332e565b612975565b61247890426132e3565b6124839060646132e3565b63ffffffff16600390910155565b6124a4428260010154612469919061332e565b6124ae90426132e3565b6124b99060646132e3565b63ffffffff16600490910155565b60006124d38383612164565b156124e057506001610f13565b50600092915050565b6001015442101590565b6004015442101590565b60005b818110156126bc57600180546040805160e08101825260008082526020808301828152838501838152606085018481526080860185815260a0870186815260c088018b81528a8c018c559a8752965160078a027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681019190915593517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf785015591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8840155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9830155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa82015592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb8401805491151560ff1990921691909117905594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfc909201919091558281526002845281812080546001600160a01b03191633908117909155815260049093528220805491926126a3836133c3565b91905055505080806126b4906133c3565b915050612500565b5060405133907ffa75433b62fa9aa3569a596aca6569a4687697e876289d01131561272e0e904890600090a250565b60006126f682612143565b6127125760405162461bcd60e51b81526004016109c49061304b565b600061271d836129ae565b9050806001600160a01b0316846001600160a01b031614806127585750836001600160a01b031661274d84610b18565b6001600160a01b0316145b8061276857506127688185611f72565b949350505050565b61277b848484612224565b612787848484846129e3565b610f9e5760405162461bcd60e51b81526004016109c490612f0a565b6003015442101590565b60408051602081019091526000815290565b6060816127e457506040805180820190915260018152600360fc1b602082015261094e565b8160005b811561280e57806127f8816133c3565b91506128079050600a836132fb565b91506127e8565b60008167ffffffffffffffff81111561283757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015612861576020820181803683370190505b5090505b84156127685761287660018361332e565b9150612883600a866133de565b61288e9060306132e3565b60f81b8183815181106128b157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506128d3600a866132fb565b9450612865565b60008060005b6001600160a01b03851660009081526020819052604090205481101561296d576001600160a01b038516600090815260208190526040902080548290811061293857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b038581169116141561295b578091505b80612965816133c3565b9150506128e0565b509392505050565b600081334260405160200161298b929190612d9f565b6040516020818303038152906040528051906020012060001c61094b91906133de565b6000818152600a60205260408120546001600160a01b03168061094b5760405162461bcd60e51b81526004016109c490613097565b60006129f7846001600160a01b0316612afe565b15612af357836001600160a01b031663150b7a02612a13612160565b8786866040518563ffffffff1660e01b8152600401612a359493929190612e04565b602060405180830381600087803b158015612a4f57600080fd5b505af1925050508015612a7f575060408051601f3d908101601f19168201909252612a7c91810190612ced565b60015b612ad9573d808015612aad576040519150601f19603f3d011682016040523d82523d6000602084013e612ab2565b606091505b508051612ad15760405162461bcd60e51b81526004016109c490612f0a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612768565b506001949350505050565b3b151590565b80356001600160a01b038116811461094e57600080fd5b600060208284031215612b2c578081fd5b611c5a82612b04565b60008060408385031215612b47578081fd5b612b5083612b04565b9150612b5e60208401612b04565b90509250929050565b600080600060608486031215612b7b578081fd5b612b8484612b04565b9250612b9260208501612b04565b9150604084013590509250925092565b60008060008060808587031215612bb7578081fd5b612bc085612b04565b93506020612bcf818701612b04565b935060408601359250606086013567ffffffffffffffff80821115612bf2578384fd5b818801915088601f830112612c05578384fd5b813581811115612c1757612c1761341e565b604051601f8201601f1916810185018381118282101715612c3a57612c3a61341e565b60405281815283820185018b1015612c50578586fd5b81858501868301379081019093019390935250939692955090935050565b60008060408385031215612c80578182fd5b612c8983612b04565b915060208301358015158114612c9d578182fd5b809150509250929050565b60008060408385031215612cba578182fd5b612cc383612b04565b946020939093013593505050565b600060208284031215612ce2578081fd5b8135611c5a81613434565b600060208284031215612cfe578081fd5b8151611c5a81613434565b600060208284031215612d1a578081fd5b5035919050565b60008060408385031215612d33578182fd5b50508035926020909101359150565b60008060008060808587031215612d57578384fd5b5050823594602084013594506040840135936060013592509050565b60008151808452612d8b816020860160208601613345565b601f01601f19169290920160200192915050565b60609290921b6bffffffffffffffffffffffff19168252601482015260340190565b60008351612dd3818460208801613345565b835190830190612de7818360208801613345565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612e3790830184612d73565b9695505050505050565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b6020808252825182820181905260009190848201906040850190845b81811015612ea85783516001600160a01b031683529284019291840191600101612e83565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612ea857835183529284019291840191600101612ed0565b901515815260200190565b600060208252611c5a6020830184612d73565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601290820152712a3930b2329034b9903737ba1027b832b71760711b604082015260600190565b60208082526026908201527f54726164652063616e2062652063616e63656c6c6564206f6e6c79206279207060408201526537b9ba32b91760d11b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b90815260200190565b988952602089019790975260408801959095526060870193909352608086019190915260a0850152151560c084015260e08301526101008201526101200190565b90815267115e1958dd5d195960c21b602082015260400190565b9081526810d85b98d95b1b195960ba1b602082015260400190565b9081526327b832b760e11b602082015260400190565b93845260208401929092526040830152606082015260800190565b9687526020870195909552604086019390935260608501919091526080840152151560a083015260c082015260e00190565b600082198211156132f6576132f66133f2565b500190565b60008261330a5761330a613408565b500490565b6000816000190483118215151615613329576133296133f2565b500290565b600082821015613340576133406133f2565b500390565b60005b83811015613360578181015183820152602001613348565b83811115610f9e5750506000910152565b600081613380576133806133f2565b506000190190565b60028104600182168061339c57607f821691505b602082108114156133bd57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156133d7576133d76133f2565b5060010190565b6000826133ed576133ed613408565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461119857600080fdfe10b6615359775e93e7a308e2ee80875d995f6026b4a0e1f4e2dbe995c773fab7a26469706673582212200fe86dcc8fc6caa239d9b03a411287f7197a9d84b86aab3893cae6d2cd39749064736f6c63430008000033",
    "deployedBytecode": "6080604052600436106102c95760003560e01c806386481d4011610175578063ab2874cb116100dc578063d13e736a11610095578063e985e9c51161006f578063e985e9c514610896578063eb320915146108b6578063f2fde38b146108d6578063fe41146b146108f6576102c9565b8063d13e736a14610829578063ddc6326214610856578063e1928ac914610876576102c9565b8063ab2874cb14610776578063b2e6ceeb14610789578063b88d4fde146107a9578063b99c6e0a146107c9578063c87b56dd146107e9578063ccf670f814610809576102c9565b80639bcf5f0c1161012e5780639bcf5f0c146106b6578063a22cb465146106d6578063a5c14ec7146106f6578063a7a624e014610716578063a9059cbb14610736578063a9bf928f14610756576102c9565b806386481d401461060c5780638871c9c51461062c5780638da5cb5b1461064c57806392658a281461066157806395d89b41146106815780639881559414610696576102c9565b806323b872dd11610234578063575c25b0116101ed5780636352211e116101c75780636352211e1461059757806370a08231146105b7578063715018a6146105d757806372e6eaa6146105ec576102c9565b8063575c25b01461051d578063580405ba1461054a5780636099804d14610577576102c9565b806323b872dd1461046257806327adc95e146104825780632db25e0514610495578063387dd9e9146104b55780633ccfd60b146104e857806342842e0e146104fd576102c9565b80630c10e499116102865780630c10e499146103a85780630c493fba146103c85780630d79e835146103e857806310e96da5146103fd5780631d5ec3cb1461041d5780631e6c598e14610432576102c9565b806301ffc9a7146102ce57806302d2838b1461030457806306fdde0314610319578063081812fc1461033b578063095ea7b31461036857806309ec6cc714610388575b600080fd5b3480156102da57600080fd5b506102ee6102e9366004612cd1565b61090b565b6040516102fb9190612eec565b60405180910390f35b610317610312366004612d09565b610953565b005b34801561032557600080fd5b5061032e610a86565b6040516102fb9190612ef7565b34801561034757600080fd5b5061035b610356366004612d09565b610b18565b6040516102fb9190612df0565b34801561037457600080fd5b50610317610383366004612ca8565b610b5b565b34801561039457600080fd5b506103176103a3366004612d09565b610bda565b3480156103b457600080fd5b5061035b6103c3366004612d09565b610ccf565b3480156103d457600080fd5b506103176103e3366004612d21565b610cea565b3480156103f457600080fd5b50610317610dbc565b34801561040957600080fd5b506102ee610418366004612b35565b610e59565b34801561042957600080fd5b50610317610f19565b34801561043e57600080fd5b5061045261044d366004612d09565b610f3d565b6040516102fb9493929190612e41565b34801561046e57600080fd5b5061031761047d366004612b67565b610f6e565b610317610490366004612d09565b610fa4565b3480156104a157600080fd5b506104526104b0366004612d09565b611074565b3480156104c157600080fd5b506104d56104d0366004612d09565b6110c7565b6040516102fb97969594939291906132b1565b3480156104f457600080fd5b50610317611119565b34801561050957600080fd5b50610317610518366004612b67565b61119b565b34801561052957600080fd5b5061053d610538366004612b1b565b6111bb565b6040516102fb9190612eb4565b34801561055657600080fd5b5061056a610565366004612b1b565b6112af565b6040516102fb9190613201565b34801561058357600080fd5b50610317610592366004612d09565b6112c1565b3480156105a357600080fd5b5061035b6105b2366004612d09565b6113b6565b3480156105c357600080fd5b5061056a6105d2366004612b1b565b6113d1565b3480156105e357600080fd5b506103176113ec565b3480156105f857600080fd5b506102ee610607366004612b35565b611475565b34801561061857600080fd5b5061056a610627366004612d09565b6114ee565b34801561063857600080fd5b5061056a610647366004612b1b565b611552565b34801561065857600080fd5b5061035b611564565b34801561066d57600080fd5b5061031761067c366004612d21565b611573565b34801561068d57600080fd5b5061032e611719565b3480156106a257600080fd5b5061056a6106b1366004612d09565b611728565b3480156106c257600080fd5b506103176106d1366004612d09565b611749565b3480156106e257600080fd5b506103176106f1366004612c6e565b611860565b34801561070257600080fd5b50610317610711366004612d09565b61192e565b34801561072257600080fd5b5061035b610731366004612ca8565b611a17565b34801561074257600080fd5b50610317610751366004612ca8565b611a4f565b34801561076257600080fd5b506104d5610771366004612d09565b611a7f565b610317610784366004612d09565b611ac0565b34801561079557600080fd5b506103176107a4366004612d09565b611ae2565b3480156107b557600080fd5b506103176107c4366004612ba2565b611b21565b3480156107d557600080fd5b506103176107e4366004612d09565b611b5a565b3480156107f557600080fd5b5061032e610804366004612d09565b611bde565b34801561081557600080fd5b50610317610824366004612d09565b611c61565b34801561083557600080fd5b50610849610844366004612b1b565b611ca5565b6040516102fb9190612e67565b34801561086257600080fd5b50610317610871366004612d09565b611d19565b34801561088257600080fd5b50610317610891366004612d42565b611e73565b3480156108a257600080fd5b506102ee6108b1366004612b35565b611f72565b3480156108c257600080fd5b506103176108d1366004612d09565b611fa0565b3480156108e257600080fd5b506103176108f1366004612b1b565b612063565b34801561090257600080fd5b5061056a612124565b60006001600160e01b031982166380ac58cd60e01b148061093c57506001600160e01b03198216635b5e139f60e01b145b8061094b575061094b8261212a565b90505b919050565b600081815260106020908152604091829020825160808101845281546001600160a01b03168152600182015492810192909252600281015492820192909252600390910154606082018190526327b832b760e11b146109cd5760405162461bcd60e51b81526004016109c490612fa2565b60405180910390fd5b806040015134146109dd57600080fd5b805160408083015190516001600160a01b039092169181156108fc0291906000818181858888f19350505050158015610a1a573d6000803e3d6000fd5b50610a2a30338360200151610f6e565b6000828152601060205260409081902067115e1958dd5d195960c21b600390910155517f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf90610a7a90849061324b565b60405180910390a15050565b606060088054610a9590613388565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac190613388565b8015610b0e5780601f10610ae357610100808354040283529160200191610b0e565b820191906000526020600020905b815481529060010190602001808311610af157829003601f168201915b5050505050905090565b6000610b2382612143565b610b3f5760405162461bcd60e51b81526004016109c4906130e0565b506000908152600c60205260409020546001600160a01b031690565b60008181526002602052604090205481906001600160a01b03163314610b8057600080fd5b6000828152600f602052604080822080546001600160a01b0319166001600160a01b0387169081179091559051849233917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259190a4505050565b600081815260106020908152604091829020825160808101845281546001600160a01b03168082526001830154938201939093526002820154938101939093526003015460608301523314610c415760405162461bcd60e51b81526004016109c490612fce565b80606001516327b832b760e11b14610c6b5760405162461bcd60e51b81526004016109c490612fa2565b610c7e3082600001518360200151610f6e565b600082815260106020526040908190206810d85b98d95b1b195960ba1b600390910155517f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf90610a7a908490613265565b6002602052600090815260409020546001600160a01b031681565b610cf5333084610f6e565b6040805160808101825233815260208082018581528284018581526327b832b760e11b606085019081526011805460009081526010909552958420945185546001600160a01b0319166001600160a01b0390911617855591516001808601919091559051600285015590516003909301929092558254919291610d799084906132e3565b90915550506011547f4d38ed2c5ea671a5ccddc331f0ebebd94a60aaf6e572543497485d4d148f9edf90610daf9060019061332e565b604051610a7a9190613280565b610dc4612160565b6001600160a01b0316610dd5611564565b6001600160a01b031614610dfb5760405162461bcd60e51b81526004016109c49061312c565b60075415610e0857600080fd5b600780546001818101835560008381527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c68892830155825480820184556005908301558254908101909255600a910155565b6000610e658383612164565b80610e815750816001600160a01b0316836001600160a01b0316145b80610e9357506001600160a01b038316155b80610ea557506001600160a01b038216155b15610eb257506000610f13565b506001600160a01b038083166000818152602081815260408083208054600181810183559185528385200180549688166001600160a01b03199788168117909155845290832080548083018255908452919092200180549093169091179091555b92915050565b3360009081526004602052604090205415610f3357600080fd5b610f3b612205565b565b60106020526000908152604090208054600182015460028301546003909301546001600160a01b0390921692909184565b60008181526002602052604090205481906001600160a01b03163314610f9357600080fd5b610f9e848484612224565b50505050565b600e543414610fb257600080fd5b600060018281548110610fd557634e487b7160e01b600052603260045260246000fd5b60009182526020909120600780549202019150610ff49060019061332e565b61100182600601546114ee565b1061100b57600080fd5b600761101a82600601546114ee565b8154811061103857634e487b7160e01b600052603260045260246000fd5b6000918252602082200154600683015560405133917ffa75433b62fa9aa3569a596aca6569a4687697e876289d01131561272e0e904891a25050565b600090815260106020908152604091829020825160808101845281546001600160a01b03168082526001830154938201849052600283015494820185905260039092015460609091018190529093919291565b600181815481106110d757600080fd5b600091825260209091206007909102018054600182015460028301546003840154600485015460058601546006909601549496509294919390929160ff169087565b611121612160565b6001600160a01b0316611132611564565b6001600160a01b0316146111585760405162461bcd60e51b81526004016109c49061312c565b611160611564565b6001600160a01b03166108fc479081150290604051600060405180830381858888f19350505050158015611198573d6000803e3d6000fd5b50565b6111b683838360405180602001604052806000815250611b21565b505050565b6001600160a01b0381166000908152600460205260408120546060919067ffffffffffffffff8111156111fe57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611227578160200160208202803683370190505b5090506000805b6001548110156112a6576000818152600260205260409020546001600160a01b0386811691161415611294578083838151811061127b57634e487b7160e01b600052603260045260246000fd5b602090810291909101015281611290816133c3565b9250505b8061129e816133c3565b91505061122e565b50909392505050565b60036020526000908152604090205481565b6112c9612160565b6001600160a01b03166112da611564565b6001600160a01b0316146113005760405162461bcd60e51b81526004016109c49061312c565b6040805160e08101825260008082526020808301828152838501838152606085018481526080860185815260a0870186815260c088018781528a8852600696879052968990209751885593516001880155915160028701555160038601555160048501555160058401805460ff19169115159190911790559051910155517fda5207af4ca2a8f617e7b6b247ccb5495c765df30e98c115443a569b8ac3d264906113ab908390613201565b60405180910390a150565b6000908152600260205260409020546001600160a01b031690565b6001600160a01b031660009081526004602052604090205490565b6113f4612160565b6001600160a01b0316611405611564565b6001600160a01b03161461142b5760405162461bcd60e51b81526004016109c49061312c565b6005546040516000916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600580546001600160a01b0319169055565b60006114818383612164565b158061149e5750816001600160a01b0316836001600160a01b0316145b806114b057506001600160a01b038316155b806114c257506001600160a01b038216155b156114cf57506000610f13565b6114d983836122f7565b506114e482846122f7565b5060019392505050565b6000805b600754811015611548576007818154811061151d57634e487b7160e01b600052603260045260246000fd5b906000526020600020015483101561153657905061094e565b80611540816133c3565b9150506114f2565b5050600754919050565b60046020526000908152604090205481565b6005546001600160a01b031690565b60008181526002602052604090205481906001600160a01b0316331461159857600080fd5b6000600183815481106115bb57634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702019050806000015460001480156115fe575060008481526006602090815260408083206002015433845260039092529091205410155b801561162b575060008481526006602081905260409091208101549082015461162890600a6132e3565b10155b61163457600080fd5b600084815260066020908152604080832060020154338452600390925282205461165e919061332e565b3360009081526003602090815260408083208490558883526006909152902080548455600180820154908501556002908101549084015560058301805460ff1916905590506116ac8261242a565b6116b582612456565b6116be82612491565b336001600160a01b031660008051602061344b8339815191528587856001015486600201548760030154886004015460008a600601548a60405161170a9998979695949392919061320a565b60405180910390a25050505050565b606060098054610a9590613388565b6007818154811061173857600080fd5b600091825260209091200154905081565b60008181526002602052604090205461176c9033906001600160a01b03166124c7565b61177557600080fd5b60006001828154811061179857634e487b7160e01b600052603260045260246000fd5b906000526020600020906007020190506117b1816124e9565b6117ba57600080fd5b600581015460ff16156117cc57600080fd5b6002810154336000908152600360205260409020546117eb91906132e3565b3360008181526003602081905260409182902093845560058501805460ff19166001908117909155855486820154600288015493880154600489015460068a015498549651979860008051602061344b83398151915298611854988d989697959695929161320a565b60405180910390a25050565b611868612160565b6001600160a01b0316826001600160a01b031614156118995760405162461bcd60e51b81526004016109c490613014565b80600d60006118a6612160565b6001600160a01b03908116825260208083019390935260409182016000908120918716808252919093529120805460ff1916921515929092179091556118ea612160565b6001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516119229190612eec565b60405180910390a35050565b60008181526002602052604090205481906001600160a01b0316331461195357600080fd5b60006001838154811061197657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060070201905061198f816124e9565b1580156119a057506119a0816124f3565b6119a957600080fd5b6119b281612491565b805460018201546002830154600380850154600486015460068701543360008181526020959095526040808620549051919860008051602061344b83398151915298611a0a988e98929791969095919490939061320a565b60405180910390a2505050565b60006020528160005260406000208181548110611a3357600080fd5b6000918252602090912001546001600160a01b03169150829050565b60008181526002602052604090205481906001600160a01b03163314611a7457600080fd5b6111b6338484612224565b6006602081905260009182526040909120805460018201546002830154600384015460048501546005860154959096015493959294919390929160ff169087565b80600e54611ace919061330f565b3414611ad957600080fd5b611198816124fd565b6000818152600f60205260409020546001600160a01b03163314611b0557600080fd5b6000611b10826113b6565b9050611b1d813384612224565b5050565b611b32611b2c612160565b836126eb565b611b4e5760405162461bcd60e51b81526004016109c4906131b0565b610f9e84848484612770565b60008181526002602052604090205481906001600160a01b03163314611b7f57600080fd5b600060018381548110611ba257634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702019050611bbb816124e9565b158015611bcc5750611bcc816127a3565b611bd557600080fd5b6119b281612456565b6060611be982612143565b611c055760405162461bcd60e51b81526004016109c490613161565b6000611c0f6127ad565b90506000815111611c2f5760405180602001604052806000815250611c5a565b80611c39846127bf565b604051602001611c4a929190612dc1565b6040516020818303038152906040525b9392505050565b611c69612160565b6001600160a01b0316611c7a611564565b6001600160a01b031614611ca05760405162461bcd60e51b81526004016109c49061312c565b600e55565b6001600160a01b03811660009081526020818152604091829020805483518184028101840190945280845260609392830182828015611d0d57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611cef575b50505050509050919050565b60008181526002602052604090205481906001600160a01b03163314611d3e57600080fd5b600060018381548110611d6157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600702019050611d7a816124e9565b611d8357600080fd5b600181015460038201546002911015611da45780611da0816133c3565b9150505b816001015482600401541115611dc25780611dbe816133c3565b9150505b600582015460ff16611ddc5780611dd8816133c3565b9150505b6000818360020154611dee919061330f565b33600090815260036020526040902054611e0891906132e3565b336000908152600360205260408120829055845590506005821415611e3f57600683018054906000611e39836133c3565b91905055505b6006830154604051339160008051602061344b8339815191529161170a918991600091829182918291829182918c9061320a565b611e7b612160565b6001600160a01b0316611e8c611564565b6001600160a01b031614611eb25760405162461bcd60e51b81526004016109c49061312c565b6040805160e08101825285815260208082018681528284018681526000606085018181526080860182815260a0870183815260c088018a81528d85526006978890529389902097518855945160018801559251600287015551600386015590516004850155905160058401805460ff191691151591909117905551910155517f0a99a7515cce8c21202b55bdd8c634a45cf0fc5ffc970a5faf445f6e2666505790611f64908690869086908690613296565b60405180910390a150505050565b6001600160a01b039182166000908152600d6020908152604080832093909416825291909152205460ff1690565b611fa8612160565b6001600160a01b0316611fb9611564565b6001600160a01b031614611fdf5760405162461bcd60e51b81526004016109c49061312c565b6007541580612025575060078054611ff99060019061332e565b8154811061201757634e487b7160e01b600052603260045260246000fd5b906000526020600020015481115b61202e57600080fd5b600780546001810182556000919091527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880155565b61206b612160565b6001600160a01b031661207c611564565b6001600160a01b0316146120a25760405162461bcd60e51b81526004016109c49061312c565b6001600160a01b0381166120c85760405162461bcd60e51b81526004016109c490612f5c565b6005546040516001600160a01b038084169216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3600580546001600160a01b0319166001600160a01b0392909216919091179055565b60115490565b6001600160e01b031981166301ffc9a760e01b14919050565b6000908152600a60205260409020546001600160a01b0316151590565b3390565b6000805b6001600160a01b0384166000908152602081905260409020548110156121fb576001600160a01b03841660009081526020819052604090208054829081106121c057634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03848116911614156121e9576001915050610f13565b806121f3816133c3565b915050612168565b5060009392505050565b61220f60066124fd565b33600090815260036020526040902060649055565b6001600160a01b03831660009081526004602052604090205460061061224957600080fd5b6001600160a01b038216600090815260046020526040812080549161226d836133c3565b90915550506001600160a01b038316600090815260046020526040812080549161229683613371565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006123038383612164565b61230f57506000610f13565b600061231b84846128da565b6001600160a01b0385166000908152602081905260409020805491925061234360018361332e565b8154811061236157634e487b7160e01b600052603260045260246000fd5b60009182526020808320909101546001600160a01b0388811684529183905260409092208054919092169190849081106123ab57634e487b7160e01b600052603260045260246000fd5b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918716815290819052604090208054806123fd57634e487b7160e01b600052603160045260246000fd5b600082815260209020600019908201810180546001600160a01b0319169055019055506001949350505050565b805460009081526006602052604090206001015461244890426132e3565b63ffffffff16600190910155565b61246e428260010154612469919061332e565b612975565b61247890426132e3565b6124839060646132e3565b63ffffffff16600390910155565b6124a4428260010154612469919061332e565b6124ae90426132e3565b6124b99060646132e3565b63ffffffff16600490910155565b60006124d38383612164565b156124e057506001610f13565b50600092915050565b6001015442101590565b6004015442101590565b60005b818110156126bc57600180546040805160e08101825260008082526020808301828152838501838152606085018481526080860185815260a0870186815260c088018b81528a8c018c559a8752965160078a027fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf681019190915593517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf785015591517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf8840155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf9830155517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfa82015592517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfb8401805491151560ff1990921691909117905594517fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cfc909201919091558281526002845281812080546001600160a01b03191633908117909155815260049093528220805491926126a3836133c3565b91905055505080806126b4906133c3565b915050612500565b5060405133907ffa75433b62fa9aa3569a596aca6569a4687697e876289d01131561272e0e904890600090a250565b60006126f682612143565b6127125760405162461bcd60e51b81526004016109c49061304b565b600061271d836129ae565b9050806001600160a01b0316846001600160a01b031614806127585750836001600160a01b031661274d84610b18565b6001600160a01b0316145b8061276857506127688185611f72565b949350505050565b61277b848484612224565b612787848484846129e3565b610f9e5760405162461bcd60e51b81526004016109c490612f0a565b6003015442101590565b60408051602081019091526000815290565b6060816127e457506040805180820190915260018152600360fc1b602082015261094e565b8160005b811561280e57806127f8816133c3565b91506128079050600a836132fb565b91506127e8565b60008167ffffffffffffffff81111561283757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015612861576020820181803683370190505b5090505b84156127685761287660018361332e565b9150612883600a866133de565b61288e9060306132e3565b60f81b8183815181106128b157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506128d3600a866132fb565b9450612865565b60008060005b6001600160a01b03851660009081526020819052604090205481101561296d576001600160a01b038516600090815260208190526040902080548290811061293857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b038581169116141561295b578091505b80612965816133c3565b9150506128e0565b509392505050565b600081334260405160200161298b929190612d9f565b6040516020818303038152906040528051906020012060001c61094b91906133de565b6000818152600a60205260408120546001600160a01b03168061094b5760405162461bcd60e51b81526004016109c490613097565b60006129f7846001600160a01b0316612afe565b15612af357836001600160a01b031663150b7a02612a13612160565b8786866040518563ffffffff1660e01b8152600401612a359493929190612e04565b602060405180830381600087803b158015612a4f57600080fd5b505af1925050508015612a7f575060408051601f3d908101601f19168201909252612a7c91810190612ced565b60015b612ad9573d808015612aad576040519150601f19603f3d011682016040523d82523d6000602084013e612ab2565b606091505b508051612ad15760405162461bcd60e51b81526004016109c490612f0a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050612768565b506001949350505050565b3b151590565b80356001600160a01b038116811461094e57600080fd5b600060208284031215612b2c578081fd5b611c5a82612b04565b60008060408385031215612b47578081fd5b612b5083612b04565b9150612b5e60208401612b04565b90509250929050565b600080600060608486031215612b7b578081fd5b612b8484612b04565b9250612b9260208501612b04565b9150604084013590509250925092565b60008060008060808587031215612bb7578081fd5b612bc085612b04565b93506020612bcf818701612b04565b935060408601359250606086013567ffffffffffffffff80821115612bf2578384fd5b818801915088601f830112612c05578384fd5b813581811115612c1757612c1761341e565b604051601f8201601f1916810185018381118282101715612c3a57612c3a61341e565b60405281815283820185018b1015612c50578586fd5b81858501868301379081019093019390935250939692955090935050565b60008060408385031215612c80578182fd5b612c8983612b04565b915060208301358015158114612c9d578182fd5b809150509250929050565b60008060408385031215612cba578182fd5b612cc383612b04565b946020939093013593505050565b600060208284031215612ce2578081fd5b8135611c5a81613434565b600060208284031215612cfe578081fd5b8151611c5a81613434565b600060208284031215612d1a578081fd5b5035919050565b60008060408385031215612d33578182fd5b50508035926020909101359150565b60008060008060808587031215612d57578384fd5b5050823594602084013594506040840135936060013592509050565b60008151808452612d8b816020860160208601613345565b601f01601f19169290920160200192915050565b60609290921b6bffffffffffffffffffffffff19168252601482015260340190565b60008351612dd3818460208801613345565b835190830190612de7818360208801613345565b01949350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612e3790830184612d73565b9695505050505050565b6001600160a01b0394909416845260208401929092526040830152606082015260800190565b6020808252825182820181905260009190848201906040850190845b81811015612ea85783516001600160a01b031683529284019291840191600101612e83565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015612ea857835183529284019291840191600101612ed0565b901515815260200190565b600060208252611c5a6020830184612d73565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601290820152712a3930b2329034b9903737ba1027b832b71760711b604082015260600190565b60208082526026908201527f54726164652063616e2062652063616e63656c6c6564206f6e6c79206279207060408201526537b9ba32b91760d11b606082015260800190565b60208082526019908201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604082015260600190565b6020808252602c908201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b60208082526029908201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460408201526832b73a103a37b5b2b760b91b606082015260800190565b6020808252602c908201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860408201526b34b9ba32b73a103a37b5b2b760a11b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602f908201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60408201526e3732bc34b9ba32b73a103a37b5b2b760891b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b90815260200190565b988952602089019790975260408801959095526060870193909352608086019190915260a0850152151560c084015260e08301526101008201526101200190565b90815267115e1958dd5d195960c21b602082015260400190565b9081526810d85b98d95b1b195960ba1b602082015260400190565b9081526327b832b760e11b602082015260400190565b93845260208401929092526040830152606082015260800190565b9687526020870195909552604086019390935260608501919091526080840152151560a083015260c082015260e00190565b600082198211156132f6576132f66133f2565b500190565b60008261330a5761330a613408565b500490565b6000816000190483118215151615613329576133296133f2565b500290565b600082821015613340576133406133f2565b500390565b60005b83811015613360578181015183820152602001613348565b83811115610f9e5750506000910152565b600081613380576133806133f2565b506000190190565b60028104600182168061339c57607f821691505b602082108114156133bd57634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156133d7576133d76133f2565b5060010190565b6000826133ed576133ed613408565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b03198116811461119857600080fdfe10b6615359775e93e7a308e2ee80875d995f6026b4a0e1f4e2dbe995c773fab7a26469706673582212200fe86dcc8fc6caa239d9b03a411287f7197a9d84b86aab3893cae6d2cd39749064736f6c63430008000033",
    "sourceMap": "698:2809:3:-:0;;;139:11:5;121:29;;1042:1:3;1019:24;;698:2809;;;;;;;;;;1366:114:8;;;;;;;;;;;;;-1:-1:-1;;;1366:114:8;;;;;;;;;;;;;;;;-1:-1:-1;;;1366:114:8;;;867:17:7;887:12;:10;;;:12;;:::i;:::-;909:6;:18;;-1:-1:-1;;;;;;909:18:7;-1:-1:-1;;;;;909:18:7;;;;;;;;942:43;;909:18;;-1:-1:-1;909:18:7;-1:-1:-1;;942:43:7;;-1:-1:-1;;942:43:7;-1:-1:-1;1433:13:8;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1456:17:8;;;;:7;;:17;;;;;:::i;:::-;;1366:114;;698:2809:3;;586:96:14;665:10;586:96;:::o;698:2809:3:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;698:2809:3;;;-1:-1:-1;698:2809:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:380:18;99:1;89:12;;146:1;136:12;;;157:2;;211:4;203:6;199:17;189:27;;157:2;264;256:6;253:14;233:18;230:38;227:2;;;310:10;305:3;301:20;298:1;291:31;345:4;342:1;335:15;373:4;370:1;363:15;227:2;;69:325;;;:::o;:::-;698:2809:3;;;;;;",
    "deployedSourceMap": "698:2809:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1547:288:8;;;;;;;;;;-1:-1:-1;1547:288:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2529:421:3;;;;;;:::i;:::-;;:::i;:::-;;2453:98:8;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3872:217::-;;;;;;;;;;-1:-1:-1;3872:217:8;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1263:178:4:-;;;;;;;;;;-1:-1:-1;1263:178:4;;;;;:::i;:::-;;:::i;3063:442:3:-;;;;;;;;;;-1:-1:-1;3063:442:3;;;;;:::i;:::-;;:::i;456:44:1:-;;;;;;;;;;-1:-1:-1;456:44:1;;;;;:::i;:::-;;:::i;1906:368:3:-;;;;;;;;;;-1:-1:-1;1906:368:3;;;;;:::i;:::-;;:::i;1031:266:6:-;;;;;;;;;;;;;:::i;1081:386:0:-;;;;;;;;;;-1:-1:-1;1081:386:0;;;;;:::i;:::-;;:::i;1166:108:1:-;;;;;;;;;;;;;:::i;973:39:3:-;;;;;;;;;;-1:-1:-1;973:39:3;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;1106:151:4:-;;;;;;;;;;-1:-1:-1;1106:151:4;;;;;:::i;:::-;;:::i;289:303:5:-;;;;;;:::i;:::-;;:::i;1393:315:3:-;;;;;;;;;;-1:-1:-1;1393:315:3;;;;;:::i;:::-;;:::i;430:19:1:-;;;;;;;;;;-1:-1:-1;430:19:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;597:104:5:-;;;;;;;;;;;;;:::i;5102:149:8:-;;;;;;;;;;-1:-1:-1;5102:149:8;;;;;:::i;:::-;;:::i;1279:382:1:-;;;;;;;;;;-1:-1:-1;1279:382:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;506:48::-;;;;;;;;;;-1:-1:-1;506:48:1;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;625:162:6:-;;;;;;;;;;-1:-1:-1;625:162:6;;;;;:::i;:::-;;:::i;561:124:4:-;;;;;;;;;;-1:-1:-1;561:124:4;;;;;:::i;:::-;;:::i;427:129::-;;;;;;;;;;-1:-1:-1;427:129:4;;;;;:::i;:::-;;:::i;1700:145:7:-;;;;;;;;;;;;;:::i;1473:322:0:-;;;;;;;;;;-1:-1:-1;1473:322:0;;;;;:::i;:::-;;:::i;1302:229:6:-;;;;;;;;;;-1:-1:-1;1302:229:6;;;;;:::i;:::-;;:::i;560:47:1:-;;;;;;;;;;-1:-1:-1;560:47:1;;;;;:::i;:::-;;:::i;1068:85:7:-;;;;;;;;;;;;;:::i;1213:853:2:-;;;;;;;;;;-1:-1:-1;1213:853:2;;;;;:::i;:::-;;:::i;2615:102:8:-;;;;;;;;;;;;;:::i;335:23:6:-;;;;;;;;;;-1:-1:-1;335:23:6;;;;;:::i;:::-;;:::i;3615:512:2:-;;;;;;;;;;-1:-1:-1;3615:512:2;;;;;:::i;:::-;;:::i;4156:290:8:-;;;;;;;;;;-1:-1:-1;4156:290:8;;;;;:::i;:::-;;:::i;3231:379:2:-;;;;;;;;;;-1:-1:-1;3231:379:2;;;;;:::i;:::-;;:::i;80:49:0:-;;;;;;;;;;-1:-1:-1;80:49:0;;;;;:::i;:::-;;:::i;972:128:4:-;;;;;;;;;;-1:-1:-1;972:128:4;;;;;:::i;:::-;;:::i;290:39:6:-;;;;;;;;;;-1:-1:-1;290:39:6;;;;;:::i;:::-;;:::i;156:128:5:-;;;;;;:::i;:::-;;:::i;1446:198:4:-;;;;;;;;;;-1:-1:-1;1446:198:4;;;;;:::i;:::-;;:::i;5317:282:8:-;;;;;;;;;;-1:-1:-1;5317:282:8;;;;;:::i;:::-;;:::i;2850:376:2:-;;;;;;;;;;-1:-1:-1;2850:376:2;;;;;:::i;:::-;;:::i;2783:353:8:-;;;;;;;;;;-1:-1:-1;2783:353:8;;;;;:::i;:::-;;:::i;706:87:5:-;;;;;;;;;;-1:-1:-1;706:87:5;;;;;:::i;:::-;;:::i;1801:126:0:-;;;;;;;;;;-1:-1:-1;1801:126:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2071:773:2:-;;;;;;;;;;-1:-1:-1;2071:773:2;;;;;:::i;:::-;;:::i;369:251:6:-;;;;;;;;;;-1:-1:-1;369:251:6;;;;;:::i;:::-;;:::i;4512:162:8:-;;;;;;;;;;-1:-1:-1;4512:162:8;;;;;:::i;:::-;;:::i;797:229:6:-;;;;;;;;;;-1:-1:-1;797:229:6;;;;;:::i;:::-;;:::i;1994:240:7:-;;;;;;;;;;-1:-1:-1;1994:240:7;;;;;:::i;:::-;;:::i;1195:88:3:-;;;;;;;;;;;;;:::i;1547:288:8:-;1649:4;-1:-1:-1;;;;;;1672:40:8;;-1:-1:-1;;;1672:40:8;;:104;;-1:-1:-1;;;;;;;1728:48:8;;-1:-1:-1;;;1728:48:8;1672:104;:156;;;;1792:36;1816:11;1792:23;:36::i;:::-;1665:163;;1547:288;;;;:::o;2529:421:3:-;2592:18;2613:14;;;:6;:14;;;;;;;;;2592:35;;;;;;;;;-1:-1:-1;;;;;2592:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2645:22:3;2637:53;;;;-1:-1:-1;;;2637:53:3;;;;;;;:::i;:::-;;;;;;;;;2721:5;:11;;;2708:9;:24;2700:33;;;;;;2751:12;;2774:11;;;;;2743:43;;-1:-1:-1;;;;;2743:30:3;;;;:43;;;;;2774:11;2751:12;2743:43;2751:12;2743:43;2774:11;2743:30;:43;;;;;;;;;;;;;;;;;;;;;2796:51;2817:4;2824:10;2836:5;:10;;;2796:12;:51::i;:::-;2857:14;;;;:6;:14;;;;;;;-1:-1:-1;;;2857:21:3;;;;:34;2906:37;;;;;2864:6;;2906:37;:::i;:::-;;;;;;;;2529:421;;:::o;2453:98:8:-;2507:13;2539:5;2532:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2453:98;:::o;3872:217::-;3948:7;3975:16;3983:7;3975;:16::i;:::-;3967:73;;;;-1:-1:-1;;;3967:73:8;;;;;;;:::i;:::-;-1:-1:-1;4058:24:8;;;;:15;:24;;;;;;-1:-1:-1;;;;;4058:24:8;;3872:217::o;1263:178:4:-;1605:20:6;;;;:11;:20;;;;;;;;-1:-1:-1;;;;;1605:20:6;1591:10;:34;1583:43;;;;;;1357:22:4::1;::::0;;;:13:::1;:22;::::0;;;;;:28;;-1:-1:-1;;;;;;1357:28:4::1;-1:-1:-1::0;;;;;1357:28:4;::::1;::::0;;::::1;::::0;;;1400:34;;1357:22;;1409:10:::1;::::0;1400:34:::1;::::0;1357:22;1400:34:::1;1263:178:::0;;;:::o;3063:442:3:-;3118:18;3139:14;;;:6;:14;;;;;;;;;3118:35;;;;;;;;;-1:-1:-1;;;;;3118:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3184:10;:26;3163:111;;;;-1:-1:-1;;;3163:111:3;;;;;;;:::i;:::-;3292:5;:12;;;-1:-1:-1;;;3292:22:3;3284:53;;;;-1:-1:-1;;;3284:53:3;;;;;;;:::i;:::-;3347;3368:4;3375:5;:12;;;3389:5;:10;;;3347:12;:53::i;:::-;3410:14;;;;:6;:14;;;;;;;-1:-1:-1;;;3410:21:3;;;;:35;3460:38;;;;;3417:6;;3460:38;:::i;456:44:1:-;;;;;;;;;;;;-1:-1:-1;;;;;456:44:1;;:::o;1906:368:3:-;1974:46;1987:10;2007:4;2014:5;1974:12;:46::i;:::-;2053:129;;;;;;;;2081:10;2053:129;;;;;;;;;;;;;;;-1:-1:-1;;;2053:129:3;;;;;;2037:12;;;-1:-1:-1;2030:20:3;;;:6;:20;;;;;;:152;;;;-1:-1:-1;;;;;;2030:152:3;-1:-1:-1;;;;;2030:152:3;;;;;;;;-1:-1:-1;2030:152:3;;;;;;;;;;;;;;;;;;;;;;;2192:17;;-1:-1:-1;;2037:12:3;2192:17;;-1:-1:-1;;2192:17:3;:::i;:::-;;;;-1:-1:-1;;2242:12:3;;2224:43;;2242:16;;2257:1;;2242:16;:::i;:::-;2224:43;;;;;;:::i;1031:266:6:-;1291:12:7;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:7;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:7;;1272:68;;;;-1:-1:-1;;;1272:68:7;;;;;;;:::i;:::-;1092:9:6::1;:16:::0;:21;1084:30:::1;;;::::0;::::1;;1124:9;:17:::0;;::::1;::::0;;::::1;::::0;;1139:1:::1;1124:17:::0;;;;;;::::1;::::0;1161;;;;::::1;::::0;;1176:1:::1;1161:17:::0;;::::1;::::0;1200:18;;;;::::1;::::0;;;1215:2:::1;1200:18:::0;::::1;::::0;1031:266::o;1081:386:0:-;1149:4;1229:23;1238:5;1245:6;1229:8;:23::i;:::-;:42;;;;1265:6;-1:-1:-1;;;;;1256:15:0;:5;-1:-1:-1;;;;;1256:15:0;;1229:42;:65;;;-1:-1:-1;;;;;;1275:19:0;;;1229:65;:89;;;-1:-1:-1;;;;;;1298:20:0;;;1229:89;1225:132;;;-1:-1:-1;1341:5:0;1334:12;;1225:132;-1:-1:-1;;;;;;1367:18:0;;;:11;:18;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1367:31:0;;;;;;;;1408:19;;;;;:31;;;;;;;;;;;;;;;;;;;;;;;;;;1081:386;;;;;:::o;1166:108:1:-;1227:10;1212:26;;;;:14;:26;;;;;;:31;1204:40;;;;;;1254:13;:11;:13::i;:::-;1166:108::o;973:39:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;973:39:3;;;;;;;:::o;1106:151:4:-;1605:20:6;;;;:11;:20;;;;;;;;-1:-1:-1;;;;;1605:20:6;1591:10;:34;1583:43;;;;;;1220:30:4::1;1230:5;1237:3;1242:7;1220:9;:30::i;:::-;1106:151:::0;;;;:::o;289:303:5:-;372:10;;359:9;:23;351:32;;;;;;393:19;415:5;421:7;415:14;;;;;;-1:-1:-1;;;415:14:5;;;;;;;;;;;;;;;;;;470:16;;415:14;;;;-1:-1:-1;470:18:5;;487:1;;470:18;:::i;:::-;447:20;456:6;:10;;;447:8;:20::i;:::-;:41;439:50;;;;;;512:9;522:20;531:6;:10;;;522:8;:20::i;:::-;512:31;;;;;;-1:-1:-1;;;512:31:5;;;;;;;;;;;;;;;;;;499:10;;;:44;558:27;;574:10;;558:27;;;289:303;;:::o;1393:315:3:-;1501:7;1617:14;;;:6;:14;;;;;;;;;1596:35;;;;;;;;;-1:-1:-1;;;;;1596:35:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1393:315::o;430:19:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;430:19:1;;;;;;;;;;;:::o;597:104:5:-;1291:12:7;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:7;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:7;;1272:68;;;;-1:-1:-1;;;1272:68:7;;;;;;;:::i;:::-;654:7:5::1;:5;:7::i;:::-;-1:-1:-1::0;;;;;646:25:5::1;:48;672:21;646:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;597:104::o:0;5102:149:8:-;5205:39;5222:4;5228:2;5232:7;5205:39;;;;;;;;;;;;:16;:39::i;:::-;5102:149;;;:::o;1279:382:1:-;-1:-1:-1;;;;;1400:22:1;;1366:20;1400:22;;;:14;:22;;;;;;1341:13;;1366:20;1389:34;;;;;;-1:-1:-1;;;1389:34:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1389:34:1;;1366:57;;1433:12;1464:6;1459:173;1480:5;:12;1476:16;;1459:173;;;1517:14;;;;:11;:14;;;;;;-1:-1:-1;;;;;1517:24:1;;;:14;;:24;1513:109;;;1579:1;1561:6;1568:7;1561:15;;;;;;-1:-1:-1;;;1561:15:1;;;;;;;;;;;;;;;;;;:19;1598:9;;;;:::i;:::-;;;;1513:109;1494:3;;;;:::i;:::-;;;;1459:173;;;-1:-1:-1;1648:6:1;;1279:382;-1:-1:-1;;;1279:382:1:o;506:48::-;;;;;;;;;;;;;:::o;625:162:6:-;1291:12:7;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:7;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:7;;1272:68;;;;-1:-1:-1;;;1272:68:7;;;;;;;:::i;:::-;713:29:6::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;713:29:6;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;692:18;;;:9:::1;:18:::0;;;;;;;;:50;;;;;;713:29;692:50;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;692:50:6::1;::::0;::::1;;::::0;;;::::1;::::0;;;;;::::1;::::0;757:23;::::1;::::0;::::1;::::0;692:18;;757:23:::1;:::i;:::-;;;;;;;;625:162:::0;:::o;561:124:4:-;625:14;658:20;;;:11;:20;;;;;;-1:-1:-1;;;;;658:20:4;;561:124::o;427:129::-;-1:-1:-1;;;;;527:22:4;492:16;527:22;;;:14;:22;;;;;;;427:129::o;1700:145:7:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:7;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:7;;1272:68;;;;-1:-1:-1;;;1272:68:7;;;;;;;:::i;:::-;1790:6:::1;::::0;1769:40:::1;::::0;1806:1:::1;::::0;-1:-1:-1;;;;;1790:6:7::1;::::0;1769:40:::1;::::0;1806:1;;1769:40:::1;1819:6;:19:::0;;-1:-1:-1;;;;;;1819:19:7::1;::::0;;1700:145::o;1473:322:0:-;1544:4;1565:23;1574:5;1581:6;1565:8;:23::i;:::-;1564:24;:43;;;;1601:6;-1:-1:-1;;;;;1592:15:0;:5;-1:-1:-1;;;;;1592:15:0;;1564:43;:66;;;-1:-1:-1;;;;;;1611:19:0;;;1564:66;:90;;;-1:-1:-1;;;;;;1634:20:0;;;1564:90;1560:133;;;-1:-1:-1;1677:5:0;1670:12;;1560:133;1703:27;1716:5;1723:6;1703:12;:27::i;:::-;;1740;1753:6;1761:5;1740:12;:27::i;:::-;-1:-1:-1;1784:4:0;;1473:322;-1:-1:-1;;;1473:322:0:o;1302:229:6:-;1351:4;;1367:125;1384:9;:16;1382:18;;1367:125;;;1428:9;1438:1;1428:12;;;;;;-1:-1:-1;;;1428:12:6;;;;;;;;;;;;;;;;;1424:3;:16;1421:61;;;1466:1;-1:-1:-1;1459:8:6;;1421:61;1402:3;;;;:::i;:::-;;;;1367:125;;;-1:-1:-1;;1508:9:6;:16;1302:229;;;:::o;560:47:1:-;;;;;;;;;;;;;:::o;1068:85:7:-;1140:6;;-1:-1:-1;;;;;1140:6:7;1068:85;:::o;1213:853:2:-;1605:20:6;;;;:11;:20;;;;;;;;-1:-1:-1;;;;;1605:20:6;1591:10;:34;1583:43;;;;;;1295:19:2::1;1317:5;1323:7;1317:14;;;;;;-1:-1:-1::0;;;1317:14:2::1;;;;;;;;;;;;;;;;;;;1295:36;;1349:6;:13;;;1366:1;1349:18;:77;;;;-1:-1:-1::0;1402:18:2::1;::::0;;;:9:::1;:18;::::0;;;;;;;:24:::1;;::::0;1387:10:::1;1371:27:::0;;:15:::1;:27:::0;;;;;;;:55:::1;;1349:77;:124;;;;-1:-1:-1::0;1451:18:2::1;::::0;;;:9:::1;:18;::::0;;;;;;;:22;::::1;::::0;1431:10;;::::1;::::0;:15:::1;::::0;1444:2:::1;1431:15;:::i;:::-;1430:43;;1349:124;1341:133;;;::::0;::::1;;1484:21;1539:18:::0;;;:9:::1;:18;::::0;;;;;;;:24:::1;;::::0;1524:10:::1;1508:27:::0;;:15:::1;:27:::0;;;;;;:56:::1;::::0;1539:24;1508:56:::1;:::i;:::-;1590:10;1574:27;::::0;;;:15:::1;:27;::::0;;;;;;;:46;;;1646:18;;;:9:::1;:18:::0;;;;;:25;;1630:41;;1700:28:::1;::::0;;::::1;::::0;1681:16;;::::1;:47:::0;1753:24:::1;::::0;;::::1;::::0;1738:12;;::::1;:39:::0;1787:14:::1;::::0;::::1;:22:::0;;-1:-1:-1;;1787:22:2::1;::::0;;1484:80;-1:-1:-1;1819:20:2::1;1630:6:::0;1819:12:::1;:20::i;:::-;1849:19;1861:6;1849:11;:19::i;:::-;1878:21;1892:6;1878:13;:21::i;:::-;1925:10;-1:-1:-1::0;;;;;1914:145:2::1;-1:-1:-1::0;;;;;;;;;;;1937:7:2::1;1946;1955:6;:16;;;1973:6;:12;;;1987:6;:15;;;2004:6;:17;;;2023:5;2030:6;:10;;;2042:16;1914:145;;;;;;;;;;;;;;:::i;:::-;;;;;;;;1636:1:6;;1213:853:2::0;;;:::o;2615:102:8:-;2671:13;2703:7;2696:14;;;;;:::i;335:23:6:-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;335:23:6;:::o;3615:512:2:-;3692:20;;;;:11;:20;;;;;;3671:42;;3680:10;;-1:-1:-1;;;;;3692:20:2;3671:8;:42::i;:::-;3663:51;;;;;;3724:19;3746:5;3752:7;3746:14;;;;;;-1:-1:-1;;;3746:14:2;;;;;;;;;;;;;;;;;;;3724:36;;3778:16;3787:6;3778:8;:16::i;:::-;3770:25;;;;;;3814:14;;;;;;3813:15;3805:24;;;;;;3900:12;;;;3885:10;3869:27;;;;:15;:27;;;;;;:44;;3900:12;3869:44;:::i;:::-;3855:10;3839:27;;;;:15;:27;;;;;;;;;:74;;;3923:14;;;:21;;-1:-1:-1;;3923:21:2;3940:4;3923:21;;;;;;3991:13;;4006:16;;;;4024:12;;;;4038:15;;;;4055:17;;;;4080:10;;;;4092:27;;3959:161;;3855:10;;-1:-1:-1;;;;;;;;;;;3959:161:2;;;3982:7;;3991:13;;4006:16;;4024:12;3940:4;4080:10;3959:161;:::i;:::-;;;;;;;;3615:512;;:::o;4156:290:8:-;4270:12;:10;:12::i;:::-;-1:-1:-1;;;;;4258:24:8;:8;-1:-1:-1;;;;;4258:24:8;;;4250:62;;;;-1:-1:-1;;;4250:62:8;;;;;;;:::i;:::-;4368:8;4323:18;:32;4342:12;:10;:12::i;:::-;-1:-1:-1;;;;;4323:32:8;;;;;;;;;;;;;;;;;-1:-1:-1;4323:32:8;;;:42;;;;;;;;;;;;:53;;-1:-1:-1;;4323:53:8;;;;;;;;;;;4406:12;:10;:12::i;:::-;-1:-1:-1;;;;;4391:48:8;;4430:8;4391:48;;;;;;:::i;:::-;;;;;;;;4156:290;;:::o;3231:379:2:-;1605:20:6;;;;:11;:20;;;;;;;;-1:-1:-1;;;;;1605:20:6;1591:10;:34;1583:43;;;;;;3301:19:2::1;3323:5;3329:7;3323:14;;;;;;-1:-1:-1::0;;;3323:14:2::1;;;;;;;;;;;;;;;;;;;3301:36;;3357:16;3366:6;3357:8;:16::i;:::-;3355:18;:38;;;;;3377:16;3386:6;3377:8;:16::i;:::-;3347:47;;;::::0;::::1;;3404:21;3418:6;3404:13;:21::i;:::-;3472:13:::0;;3487:16:::1;::::0;::::1;::::0;3505:12:::1;::::0;::::1;::::0;3519:15:::1;::::0;;::::1;::::0;3536:17:::1;::::0;::::1;::::0;3562:10:::1;::::0;::::1;::::0;3451::::1;3472:13;3574:27:::0;;;::::1;::::0;;;;;;;;;3440:162;;3451:10;;-1:-1:-1;;;;;;;;;;;3440:162:2;::::1;::::0;3463:7;;3472:13;;3487:16;;3505:12;;3519:15;;3536:17;;3574:27;3440:162:::1;:::i;:::-;;;;;;;;1636:1:6;3231:379:2::0;;:::o;80:49:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;80:49:0;;-1:-1:-1;80:49:0;;-1:-1:-1;80:49:0:o;972:128:4:-;1605:20:6;;;;:11;:20;;;;;;;;-1:-1:-1;;;;;1605:20:6;1591:10;:34;1583:43;;;;;;1058:35:4::1;1068:10;1080:3;1085:7;1058:9;:35::i;290:39:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;156:128:5:-;244:4;232:10;;:16;;;;:::i;:::-;219:9;:29;211:38;;;;;;259:18;272:4;259:12;:18::i;1446:198:4:-;1511:22;;;;:13;:22;;;;;;-1:-1:-1;;;;;1511:22:4;1537:10;1511:36;1503:45;;;;;;1558:13;1574:16;1582:7;1574;:16::i;:::-;1558:32;;1600:37;1610:5;1617:10;1629:7;1600:9;:37::i;:::-;1446:198;;:::o;5317:282:8:-;5448:41;5467:12;:10;:12::i;:::-;5481:7;5448:18;:41::i;:::-;5440:103;;;;-1:-1:-1;;;5440:103:8;;;;;;;:::i;:::-;5553:39;5567:4;5573:2;5577:7;5586:5;5553:13;:39::i;2850:376:2:-;1605:20:6;;;;:11;:20;;;;;;;;-1:-1:-1;;;;;1605:20:6;1591:10;:34;1583:43;;;;;;2921:19:2::1;2943:5;2949:7;2943:14;;;;;;-1:-1:-1::0;;;2943:14:2::1;;;;;;;;;;;;;;;;;;;2921:36;;2977:16;2986:6;2977:8;:16::i;:::-;2975:18;:36;;;;;2997:14;3004:6;2997;:14::i;:::-;2967:45;;;::::0;::::1;;3022:19;3034:6;3022:11;:19::i;2783:353:8:-:0;2856:13;2889:16;2897:7;2889;:16::i;:::-;2881:76;;;;-1:-1:-1;;;2881:76:8;;;;;;;:::i;:::-;2968:21;2992:10;:8;:10::i;:::-;2968:34;;3043:1;3025:7;3019:21;:25;:110;;;;;;;;;;;;;;;;;3083:7;3092:18;:7;:16;:18::i;:::-;3066:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3019:110;3012:117;2783:353;-1:-1:-1;;;2783:353:8:o;706:87:5:-;1291:12:7;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:7;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:7;;1272:68;;;;-1:-1:-1;;;1272:68:7;;;;;;;:::i;:::-;769:10:5::1;:17:::0;706:87::o;1801:126:0:-;-1:-1:-1;;;;;1902:18:0;;:11;:18;;;;;;;;;;;;1895:25;;;;;;;;;;;;;;;;;1866:17;;1895:25;;;1902:18;1895:25;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1895:25:0;;;;;;;;;;;;;;;;;;;;;;;1801:126;;;:::o;2071:773:2:-;1605:20:6;;;;:11;:20;;;;;;;;-1:-1:-1;;;;;1605:20:6;1591:10;:34;1583:43;;;;;;2139:19:2::1;2161:5;2167:7;2161:14;;;;;;-1:-1:-1::0;;;2161:14:2::1;;;;;;;;;;;;;;;;;;;2139:36;;2193:16;2202:6;2193:8;:16::i;:::-;2185:25;;;::::0;::::1;;2264:16;::::0;::::1;::::0;2246:15:::1;::::0;::::1;::::0;2232:1:::1;::::0;-1:-1:-1;2243:70:2::1;;;2295:7:::0;::::1;::::0;::::1;:::i;:::-;;;;2243:70;2345:6;:16;;;2325:6;:17;;;:36;2322:72;;;2376:7:::0;::::1;::::0;::::1;:::i;:::-;;;;2322:72;2407:14;::::0;::::1;::::0;::::1;;2403:51;;2436:7:::0;::::1;::::0;::::1;:::i;:::-;;;;2403:51;2463:21;2533:4;2518:6;:12;;;:19;;;;:::i;:::-;2503:10;2487:27;::::0;;;:15:::1;:27;::::0;;;;;:51:::1;::::0;;::::1;:::i;:::-;2564:10;2548:27;::::0;;;:15:::1;:27;::::0;;;;:46;;;2604:17;;2463:75;-1:-1:-1;2642:1:2::1;2634:9:::0;::::1;2631:108;;;2714:10;::::0;::::1;:13:::0;;;:10:::1;:13;::::0;::::1;:::i;:::-;;;;;;2631:108;2807:10;::::0;::::1;::::0;2753:83:::1;::::0;2764:10:::1;::::0;-1:-1:-1;;;;;;;;;;;2753:83:2;::::1;::::0;2776:7;;2785:1:::1;::::0;;;;;;;;;;;2819:16;;2753:83:::1;:::i;369:251:6:-:0;1291:12:7;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:7;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:7;;1272:68;;;;-1:-1:-1;;;1272:68:7;;;;;;;:::i;:::-;497:52:6::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;;;;;;;-1:-1:-1;497:52:6;;;;;;;;;;;;;;;;;;;;;;;;476:18;;;:9:::1;:18:::0;;;;;;;;:73;;;;;;497:52;476:73;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;476:73:6::1;::::0;::::1;;::::0;;;::::1;::::0;;;;::::1;::::0;564:49;::::1;::::0;::::1;::::0;497:52;;;;;;;;564:49:::1;:::i;:::-;;;;;;;;369:251:::0;;;;:::o;4512:162:8:-;-1:-1:-1;;;;;4632:25:8;;;4609:4;4632:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4512:162::o;797:229:6:-;1291:12:7;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:7;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:7;;1272:68;;;;-1:-1:-1;;;1272:68:7;;;;;;;:::i;:::-;868:9:6::1;:16:::0;:21;;:61:::1;;-1:-1:-1::0;900:9:6::1;910:16:::0;;:18:::1;::::0;927:1:::1;::::0;910:18:::1;:::i;:::-;900:29;;;;;;-1:-1:-1::0;;;900:29:6::1;;;;;;;;;;;;;;;;;893:4;:36;868:61;860:70;;;::::0;::::1;;940:9;:20:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;940:20:6;;;;;::::1;::::0;797:229::o;1994:240:7:-;1291:12;:10;:12::i;:::-;-1:-1:-1;;;;;1280:23:7;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1280:23:7;;1272:68;;;;-1:-1:-1;;;1272:68:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;2082:22:7;::::1;2074:73;;;;-1:-1:-1::0;;;2074:73:7::1;;;;;;;:::i;:::-;2183:6;::::0;2162:38:::1;::::0;-1:-1:-1;;;;;2162:38:7;;::::1;::::0;2183:6:::1;::::0;2162:38:::1;::::0;2183:6:::1;::::0;2162:38:::1;2210:6;:17:::0;;-1:-1:-1;;;;;;2210:17:7::1;-1:-1:-1::0;;;;;2210:17:7;;;::::1;::::0;;;::::1;::::0;;1994:240::o;1195:88:3:-;1264:12;;1195:88;:::o;763:155:16:-;-1:-1:-1;;;;;;871:40:16;;-1:-1:-1;;;871:40:16;763:155;;;:::o;7033:125:8:-;7098:4;7121:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7121:16:8;:30;;;7033:125::o;586:96:14:-;665:10;586:96;:::o;136:274:0:-;208:4;;224:158;-1:-1:-1;;;;;245:18:0;;:11;:18;;;;;;;;;;:25;241:29;;224:158;;;-1:-1:-1;;;;;305:18:0;;:11;:18;;;;;;;;;;:21;;324:1;;305:21;;;;-1:-1:-1;;;305:21:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;295:31:0;;;305:21;;295:31;291:81;;;353:4;346:11;;;;;291:81;272:3;;;;:::i;:::-;;;;224:158;;;-1:-1:-1;398:5:0;;136:274;-1:-1:-1;;;136:274:0:o;667:158:1:-;709:15;722:1;709:12;:15::i;:::-;750:10;734:27;;;;:15;:27;;;;;764:3;734:33;;667:158::o;690:277:4:-;-1:-1:-1;;;;;790:21:4;;;;;;:14;:21;;;;;;814:1;-1:-1:-1;782:34:4;;;;;;-1:-1:-1;;;;;826:19:4;;;;;;:14;:19;;;;;:21;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;857:21:4;;;;;;:14;:21;;;;;:23;;;;;;:::i;:::-;;;;-1:-1:-1;;890:20:4;;;;:11;:20;;;;;;:26;;-1:-1:-1;;;;;;890:26:4;-1:-1:-1;;;;;890:26:4;;;;;;;;;931:29;;890:20;;931:29;;;;;;;690:277;;;:::o;707:368:0:-;778:4;799:23;808:5;815:6;799:8;:23::i;:::-;794:67;;-1:-1:-1;845:5:0;838:12;;794:67;870:8;881:23;890:5;897:6;881:8;:23::i;:::-;-1:-1:-1;;;;;925:18:0;;914:8;925:18;;;;;;;;;;:25;;870:34;;-1:-1:-1;1005:7:0;1011:1;925:25;1005:7;:::i;:::-;986:27;;;;;;-1:-1:-1;;;986:27:0;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;960:18:0;;;;;;;;;;;;;:23;;986:27;;;;;960:18;979:3;;960:23;;;;-1:-1:-1;;;960:23:0;;;;;;;;;;;;;;;;;;;;;:53;;-1:-1:-1;;;;;;960:53:0;-1:-1:-1;;;;;960:53:0;;;;;;1023:18;;;;;;;;;;;;:24;;;;;-1:-1:-1;;;1023:24:0;;;;;;;;;;;;;;;;-1:-1:-1;;1023:24:0;;;;;;;-1:-1:-1;;;;;;1023:24:0;;;;;;-1:-1:-1;;;707:368:0;-1:-1:-1;;;;707:368:0:o;324:147:2:-;439:12;;429:23;;;;:9;:23;;;;;:33;;;410:53;;:15;:53;:::i;:::-;385:79;;:15;;;;:79;324:147::o;476:164::-;578:48;610:15;592:5;:15;;;:33;;;;:::i;:::-;578:13;:48::i;:::-;560:66;;:15;:66;:::i;:::-;:72;;629:3;560:72;:::i;:::-;536:97;;:14;;;;:97;476:164::o;645:168::-;751:48;783:15;765:5;:15;;;:33;;;;:::i;751:48::-;733:66;;:15;:66;:::i;:::-;:72;;802:3;733:72;:::i;:::-;707:99;;:16;;;;:99;645:168::o;1933::0:-;1998:4;2018:16;2027:2;2031;2018:8;:16::i;:::-;2014:58;;;-1:-1:-1;2057:4:0;2050:11;;2014:58;-1:-1:-1;2089:5:0;1933:168;;;;:::o;818:127:2:-;903:15;;;922;-1:-1:-1;903:34:2;;818:127::o;1079:128::-;1164:16;;;1184:15;-1:-1:-1;1164:35:2;;1079:128::o;830:331:1:-;886:13;881:232;913:3;905:5;:11;881:232;;;951:5;:12;;988:29;;;;;;;;941:7;988:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;977:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;977:41:1;;;;;;;;;;;;;;;;;;;1032:15;;;977:41;1032:15;;;;;:28;;-1:-1:-1;;;;;;1032:28:1;1050:10;1032:28;;;;;;1074:26;;977:41;1074:26;;;;;:28;;951:12;;1074:28;;;:::i;:::-;;;;;;881:232;918:7;;;;;:::i;:::-;;;;881:232;;;-1:-1:-1;1127:27:1;;1143:10;;1127:27;;;;;830:331;:::o;7316:351:8:-;7409:4;7433:16;7441:7;7433;:16::i;:::-;7425:73;;;;-1:-1:-1;;;7425:73:8;;;;;;;:::i;:::-;7508:13;7524:23;7539:7;7524:14;:23::i;:::-;7508:39;;7576:5;-1:-1:-1;;;;;7565:16:8;:7;-1:-1:-1;;;;;7565:16:8;;:51;;;;7609:7;-1:-1:-1;;;;;7585:31:8;:20;7597:7;7585:11;:20::i;:::-;-1:-1:-1;;;;;7585:31:8;;7565:51;:94;;;;7620:39;7644:5;7651:7;7620:23;:39::i;:::-;7557:103;7316:351;-1:-1:-1;;;;7316:351:8:o;6461:269::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:48;6643:4;6649:2;6653:7;6662:5;6620:22;:48::i;:::-;6612:111;;;;-1:-1:-1;;;6612:111:8;;;;;;;:::i;950:124:2:-;1033:14;;;1051:15;-1:-1:-1;1033:33:2;;950:124::o;3267:92:8:-;3343:9;;;;;;;;;-1:-1:-1;3343:9:8;;3267:92;:::o;271:703:15:-;327:13;544:10;540:51;;-1:-1:-1;570:10:15;;;;;;;;;;;;-1:-1:-1;;;570:10:15;;;;;;540:51;615:5;600:12;654:75;661:9;;654:75;;686:8;;;;:::i;:::-;;-1:-1:-1;708:10:15;;-1:-1:-1;716:2:15;708:10;;:::i;:::-;;;654:75;;;738:19;770:6;760:17;;;;;;-1:-1:-1;;;760:17:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;760:17:15;;738:39;;787:150;794:10;;787:150;;820:11;830:1;820:11;;:::i;:::-;;-1:-1:-1;888:10:15;896:2;888:5;:10;:::i;:::-;875:24;;:2;:24;:::i;:::-;862:39;;845:6;852;845:14;;;;;;-1:-1:-1;;;845:14:15;;;;;;;;;;;;:56;-1:-1:-1;;;;;845:56:15;;;;;;;;-1:-1:-1;915:11:15;924:2;915:11;;:::i;:::-;;;787:150;;415:286:0;487:4;503:8;526:6;521:154;-1:-1:-1;;;;;542:18:0;;:11;:18;;;;;;;;;;:25;538:29;;521:154;;;-1:-1:-1;;;;;602:18:0;;:11;:18;;;;;;;;;;:21;;621:1;;602:21;;;;-1:-1:-1;;;602:21:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;592:31:0;;;602:21;;592:31;588:77;;;649:1;643:7;;588:77;569:3;;;;:::i;:::-;;;;521:154;;;-1:-1:-1;691:3:0;415:286;-1:-1:-1;;;415:286:0:o;1654:160:6:-;1713:4;1801:6;1768:10;1780:15;1751:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1741:56;;;;;;1736:62;;:71;;;;:::i;2156:235:8:-;2228:7;2263:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2263:16:8;2297:19;2289:73;;;;-1:-1:-1;;;2289:73:8;;;;;;;:::i;11521:824::-;11641:4;11665:15;:2;-1:-1:-1;;;;;11665:13:8;;:15::i;:::-;11661:678;;;11716:2;-1:-1:-1;;;;;11700:36:8;;11737:12;:10;:12::i;:::-;11751:4;11757:7;11766:5;11700:72;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11700:72:8;;;;;;;;-1:-1:-1;;11700:72:8;;;;;;;;;;;;:::i;:::-;;;11696:591;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11943:13:8;;11939:334;;11985:60;;-1:-1:-1;;;11985:60:8;;;;;;;:::i;11939:334::-;12225:6;12219:13;12210:6;12206:2;12202:15;12195:38;11696:591;-1:-1:-1;;;;;;11822:55:8;-1:-1:-1;;;11822:55:8;;-1:-1:-1;11815:62:8;;11661:678;-1:-1:-1;12324:4:8;11521:824;;;;;;:::o;718:413:13:-;1078:20;1116:8;;;718:413::o;14:175:18:-;84:20;;-1:-1:-1;;;;;133:31:18;;123:42;;113:2;;179:1;176;169:12;194:198;;306:2;294:9;285:7;281:23;277:32;274:2;;;327:6;319;312:22;274:2;355:31;376:9;355:31;:::i;397:274::-;;;526:2;514:9;505:7;501:23;497:32;494:2;;;547:6;539;532:22;494:2;575:31;596:9;575:31;:::i;:::-;565:41;;625:40;661:2;650:9;646:18;625:40;:::i;:::-;615:50;;484:187;;;;;:::o;676:342::-;;;;822:2;810:9;801:7;797:23;793:32;790:2;;;843:6;835;828:22;790:2;871:31;892:9;871:31;:::i;:::-;861:41;;921:40;957:2;946:9;942:18;921:40;:::i;:::-;911:50;;1008:2;997:9;993:18;980:32;970:42;;780:238;;;;;:::o;1023:1178::-;;;;;1195:3;1183:9;1174:7;1170:23;1166:33;1163:2;;;1217:6;1209;1202:22;1163:2;1245:31;1266:9;1245:31;:::i;:::-;1235:41;;1295:2;1316:40;1352:2;1341:9;1337:18;1316:40;:::i;:::-;1306:50;;1403:2;1392:9;1388:18;1375:32;1365:42;;1458:2;1447:9;1443:18;1430:32;1481:18;1522:2;1514:6;1511:14;1508:2;;;1543:6;1535;1528:22;1508:2;1586:6;1575:9;1571:22;1561:32;;1631:7;1624:4;1620:2;1616:13;1612:27;1602:2;;1658:6;1650;1643:22;1602:2;1699;1686:16;1721:2;1717;1714:10;1711:2;;;1727:18;;:::i;:::-;1776:2;1770:9;1845:2;1826:13;;-1:-1:-1;;1822:27:18;1810:40;;1806:49;;1870:18;;;1890:22;;;1867:46;1864:2;;;1916:18;;:::i;:::-;1952:2;1945:22;1976:18;;;2013:11;;;2009:20;;2006:33;-1:-1:-1;2003:2:18;;;2057:6;2049;2042:22;2003:2;2118;2113;2109;2105:11;2100:2;2092:6;2088:15;2075:46;2141:15;;;2137:24;;;2130:40;;;;-1:-1:-1;1153:1048:18;;;;-1:-1:-1;1153:1048:18;;-1:-1:-1;;1153:1048:18:o;2206:369::-;;;2332:2;2320:9;2311:7;2307:23;2303:32;2300:2;;;2353:6;2345;2338:22;2300:2;2381:31;2402:9;2381:31;:::i;:::-;2371:41;;2462:2;2451:9;2447:18;2434:32;2509:5;2502:13;2495:21;2488:5;2485:32;2475:2;;2536:6;2528;2521:22;2475:2;2564:5;2554:15;;;2290:285;;;;;:::o;2580:266::-;;;2709:2;2697:9;2688:7;2684:23;2680:32;2677:2;;;2730:6;2722;2715:22;2677:2;2758:31;2779:9;2758:31;:::i;:::-;2748:41;2836:2;2821:18;;;;2808:32;;-1:-1:-1;;;2667:179:18:o;2851:257::-;;2962:2;2950:9;2941:7;2937:23;2933:32;2930:2;;;2983:6;2975;2968:22;2930:2;3027:9;3014:23;3046:32;3072:5;3046:32;:::i;3113:261::-;;3235:2;3223:9;3214:7;3210:23;3206:32;3203:2;;;3256:6;3248;3241:22;3203:2;3293:9;3287:16;3312:32;3338:5;3312:32;:::i;3379:190::-;;3491:2;3479:9;3470:7;3466:23;3462:32;3459:2;;;3512:6;3504;3497:22;3459:2;-1:-1:-1;3540:23:18;;3449:120;-1:-1:-1;3449:120:18:o;3574:258::-;;;3703:2;3691:9;3682:7;3678:23;3674:32;3671:2;;;3724:6;3716;3709:22;3671:2;-1:-1:-1;;3752:23:18;;;3822:2;3807:18;;;3794:32;;-1:-1:-1;3661:171:18:o;3837:395::-;;;;;4000:3;3988:9;3979:7;3975:23;3971:33;3968:2;;;4022:6;4014;4007:22;3968:2;-1:-1:-1;;4050:23:18;;;4120:2;4105:18;;4092:32;;-1:-1:-1;4171:2:18;4156:18;;4143:32;;4222:2;4207:18;4194:32;;-1:-1:-1;3958:274:18;-1:-1:-1;3958:274:18:o;4237:259::-;;4318:5;4312:12;4345:6;4340:3;4333:19;4361:63;4417:6;4410:4;4405:3;4401:14;4394:4;4387:5;4383:16;4361:63;:::i;:::-;4478:2;4457:15;-1:-1:-1;;4453:29:18;4444:39;;;;4485:4;4440:50;;4288:208;-1:-1:-1;;4288:208:18:o;4501:294::-;4678:2;4674:15;;;;-1:-1:-1;;4670:53:18;4658:66;;4749:2;4740:12;;4733:28;4786:2;4777:12;;4648:147::o;4800:470::-;;5017:6;5011:13;5033:53;5079:6;5074:3;5067:4;5059:6;5055:17;5033:53;:::i;:::-;5149:13;;5108:16;;;;5171:57;5149:13;5108:16;5205:4;5193:17;;5171:57;:::i;:::-;5244:20;;4987:283;-1:-1:-1;;;;4987:283:18:o;5275:203::-;-1:-1:-1;;;;;5439:32:18;;;;5421:51;;5409:2;5394:18;;5376:102::o;5483:490::-;-1:-1:-1;;;;;5752:15:18;;;5734:34;;5804:15;;5799:2;5784:18;;5777:43;5851:2;5836:18;;5829:34;;;5899:3;5894:2;5879:18;;5872:31;;;5483:490;;5920:47;;5947:19;;5939:6;5920:47;:::i;:::-;5912:55;5686:287;-1:-1:-1;;;;;;5686:287:18:o;5978:417::-;-1:-1:-1;;;;;6227:32:18;;;;6209:51;;6291:2;6276:18;;6269:34;;;;6334:2;6319:18;;6312:34;6377:2;6362:18;;6355:34;6196:3;6181:19;;6163:232::o;6400:661::-;6571:2;6623:21;;;6693:13;;6596:18;;;6715:22;;;6400:661;;6571:2;6794:15;;;;6768:2;6753:18;;;6400:661;6840:195;6854:6;6851:1;6848:13;6840:195;;;6919:13;;-1:-1:-1;;;;;6915:39:18;6903:52;;7010:15;;;;6975:12;;;;6951:1;6869:9;6840:195;;;-1:-1:-1;7052:3:18;;6551:510;-1:-1:-1;;;;;;6551:510:18:o;7066:635::-;7237:2;7289:21;;;7359:13;;7262:18;;;7381:22;;;7066:635;;7237:2;7460:15;;;;7434:2;7419:18;;;7066:635;7506:169;7520:6;7517:1;7514:13;7506:169;;;7581:13;;7569:26;;7650:15;;;;7615:12;;;;7542:1;7535:9;7506:169;;7706:187;7871:14;;7864:22;7846:41;;7834:2;7819:18;;7801:92::o;7898:221::-;;8047:2;8036:9;8029:21;8067:46;8109:2;8098:9;8094:18;8086:6;8067:46;:::i;8124:414::-;8326:2;8308:21;;;8365:2;8345:18;;;8338:30;8404:34;8399:2;8384:18;;8377:62;-1:-1:-1;;;8470:2:18;8455:18;;8448:48;8528:3;8513:19;;8298:240::o;8543:402::-;8745:2;8727:21;;;8784:2;8764:18;;;8757:30;8823:34;8818:2;8803:18;;8796:62;-1:-1:-1;;;8889:2:18;8874:18;;8867:36;8935:3;8920:19;;8717:228::o;8950:342::-;9152:2;9134:21;;;9191:2;9171:18;;;9164:30;-1:-1:-1;;;9225:2:18;9210:18;;9203:48;9283:2;9268:18;;9124:168::o;9297:402::-;9499:2;9481:21;;;9538:2;9518:18;;;9511:30;9577:34;9572:2;9557:18;;9550:62;-1:-1:-1;;;9643:2:18;9628:18;;9621:36;9689:3;9674:19;;9471:228::o;9704:349::-;9906:2;9888:21;;;9945:2;9925:18;;;9918:30;9984:27;9979:2;9964:18;;9957:55;10044:2;10029:18;;9878:175::o;10058:408::-;10260:2;10242:21;;;10299:2;10279:18;;;10272:30;10338:34;10333:2;10318:18;;10311:62;-1:-1:-1;;;10404:2:18;10389:18;;10382:42;10456:3;10441:19;;10232:234::o;10471:405::-;10673:2;10655:21;;;10712:2;10692:18;;;10685:30;10751:34;10746:2;10731:18;;10724:62;-1:-1:-1;;;10817:2:18;10802:18;;10795:39;10866:3;10851:19;;10645:231::o;10881:408::-;11083:2;11065:21;;;11122:2;11102:18;;;11095:30;11161:34;11156:2;11141:18;;11134:62;-1:-1:-1;;;11227:2:18;11212:18;;11205:42;11279:3;11264:19;;11055:234::o;11294:356::-;11496:2;11478:21;;;11515:18;;;11508:30;11574:34;11569:2;11554:18;;11547:62;11641:2;11626:18;;11468:182::o;11655:411::-;11857:2;11839:21;;;11896:2;11876:18;;;11869:30;11935:34;11930:2;11915:18;;11908:62;-1:-1:-1;;;12001:2:18;11986:18;;11979:45;12056:3;12041:19;;11829:237::o;12071:413::-;12273:2;12255:21;;;12312:2;12292:18;;;12285:30;12351:34;12346:2;12331:18;;12324:62;-1:-1:-1;;;12417:2:18;12402:18;;12395:47;12474:3;12459:19;;12245:239::o;12489:177::-;12635:25;;;12623:2;12608:18;;12590:76::o;12671:801::-;13076:25;;;13132:2;13117:18;;13110:34;;;;13175:2;13160:18;;13153:34;;;;13218:2;13203:18;;13196:34;;;;13261:3;13246:19;;13239:35;;;;13305:3;13290:19;;13283:35;13362:14;13355:22;13349:3;13334:19;;13327:51;13409:3;13394:19;;13387:35;13453:3;13438:19;;13431:35;13063:3;13048:19;;13030:442::o;13477:315::-;13714:25;;;-1:-1:-1;;;13770:2:18;13755:18;;13748:38;13702:2;13687:18;;13669:123::o;13797:316::-;14034:25;;;-1:-1:-1;;;14090:2:18;14075:18;;14068:39;14022:2;14007:18;;13989:124::o;14118:311::-;14355:25;;;-1:-1:-1;;;14411:2:18;14396:18;;14389:34;14343:2;14328:18;;14310:119::o;14434:391::-;14665:25;;;14721:2;14706:18;;14699:34;;;;14764:2;14749:18;;14742:34;14807:2;14792:18;;14785:34;14652:3;14637:19;;14619:206::o;14830:617::-;15139:25;;;15195:2;15180:18;;15173:34;;;;15238:2;15223:18;;15216:34;;;;15281:2;15266:18;;15259:34;;;;15324:3;15309:19;;15302:35;15381:14;15374:22;15368:3;15353:19;;15346:51;15428:3;15413:19;;15406:35;15126:3;15111:19;;15093:354::o;16218:128::-;;16289:1;16285:6;16282:1;16279:13;16276:2;;;16295:18;;:::i;:::-;-1:-1:-1;16331:9:18;;16266:80::o;16351:120::-;;16417:1;16407:2;;16422:18;;:::i;:::-;-1:-1:-1;16456:9:18;;16397:74::o;16476:168::-;;16582:1;16578;16574:6;16570:14;16567:1;16564:21;16559:1;16552:9;16545:17;16541:45;16538:2;;;16589:18;;:::i;:::-;-1:-1:-1;16629:9:18;;16528:116::o;16649:125::-;;16717:1;16714;16711:8;16708:2;;;16722:18;;:::i;:::-;-1:-1:-1;16759:9:18;;16698:76::o;16779:258::-;16851:1;16861:113;16875:6;16872:1;16869:13;16861:113;;;16951:11;;;16945:18;16932:11;;;16925:39;16897:2;16890:10;16861:113;;;16992:6;16989:1;16986:13;16983:2;;;-1:-1:-1;;17027:1:18;17009:16;;17002:27;16832:205::o;17042:136::-;;17109:5;17099:2;;17118:18;;:::i;:::-;-1:-1:-1;;;17154:18:18;;17089:89::o;17183:380::-;17268:1;17258:12;;17315:1;17305:12;;;17326:2;;17380:4;17372:6;17368:17;17358:27;;17326:2;17433;17425:6;17422:14;17402:18;17399:38;17396:2;;;17479:10;17474:3;17470:20;17467:1;17460:31;17514:4;17511:1;17504:15;17542:4;17539:1;17532:15;17396:2;;17238:325;;;:::o;17568:135::-;;-1:-1:-1;;17628:17:18;;17625:2;;;17648:18;;:::i;:::-;-1:-1:-1;17695:1:18;17684:13;;17615:88::o;17708:112::-;;17766:1;17756:2;;17771:18;;:::i;:::-;-1:-1:-1;17805:9:18;;17746:74::o;17825:127::-;17886:10;17881:3;17877:20;17874:1;17867:31;17917:4;17914:1;17907:15;17941:4;17938:1;17931:15;17957:127;18018:10;18013:3;18009:20;18006:1;17999:31;18049:4;18046:1;18039:15;18073:4;18070:1;18063:15;18089:127;18150:10;18145:3;18141:20;18138:1;18131:31;18181:4;18178:1;18171:15;18205:4;18202:1;18195:15;18221:133;-1:-1:-1;;;;;;18297:32:18;;18287:43;;18277:2;;18344:1;18341;18334:12",
    "sourcePath": "/Users/Cirno/Desktop/distributed_ether_farm-main/contracts/SlotMarket.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.0+commit.c7dfd78e"
    },
    "ast": {
        "absolutePath": "/Users/Cirno/Desktop/distributed_ether_farm-main/contracts/SlotMarket.sol",
        "exportedSymbols": {
            "Address": [
                3200
            ],
            "Context": [
                3223
            ],
            "ERC165": [
                3450
            ],
            "ERC721": [
                2712
            ],
            "Friend": [
                277
            ],
            "IERC165": [
                3462
            ],
            "IERC721": [
                2828
            ],
            "IERC721Enumerable": [
                2877
            ],
            "IERC721Metadata": [
                2904
            ],
            "IERC721Receiver": [
                2846
            ],
            "Ownable": [
                1891
            ],
            "SlotFactory": [
                459
            ],
            "SlotManagement": [
                1037
            ],
            "SlotMarket": [
                1268
            ],
            "SlotOwnership": [
                1451
            ],
            "SlotUpgrade": [
                1558
            ],
            "SlotUtils": [
                1781
            ],
            "Strings": [
                3426
            ]
        },
        "id": 1269,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1039,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:23:3"
            },
            {
                "absolutePath": "/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "file": "/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/access/Ownable.sol",
                "id": 1040,
                "nodeType": "ImportDirective",
                "scope": 1269,
                "sourceUnit": 1892,
                "src": "57:114:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "file": "/Users/Cirno/Desktop/distributed_ether_farm-main/node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
                "id": 1041,
                "nodeType": "ImportDirective",
                "scope": 1269,
                "sourceUnit": 2713,
                "src": "172:119:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/Cirno/Desktop/distributed_ether_farm-main/contracts/SlotOwnership.sol",
                "file": "./SlotOwnership.sol",
                "id": 1042,
                "nodeType": "ImportDirective",
                "scope": 1269,
                "sourceUnit": 1452,
                "src": "292:29:3",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 1044,
                            "name": "SlotOwnership",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1451,
                            "src": "721:13:3"
                        },
                        "id": 1045,
                        "nodeType": "InheritanceSpecifier",
                        "src": "721:13:3"
                    }
                ],
                "contractDependencies": [
                    277,
                    459,
                    1037,
                    1451,
                    1558,
                    1781,
                    1891,
                    2712,
                    2828,
                    2904,
                    3223,
                    3450,
                    3462
                ],
                "contractKind": "contract",
                "documentation": {
                    "id": 1043,
                    "nodeType": "StructuredDocumentation",
                    "src": "323:374:3",
                    "text": " @title Classifieds\n @notice Implements the classifieds board market. The market will be governed\n by an ERC20 token as currency, and an ERC721 token that represents the\n ownership of the items being traded. Only ads for selling items are\n implemented. The item tokenization is responsibility of the ERC721 contract\n which should encode any item details."
                },
                "fullyImplemented": true,
                "id": 1268,
                "linearizedBaseContracts": [
                    1268,
                    1451,
                    1037,
                    1558,
                    2712,
                    1781,
                    1891,
                    2904,
                    2828,
                    3450,
                    3462,
                    3223,
                    459,
                    277
                ],
                "name": "SlotMarket",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "anonymous": false,
                        "id": 1051,
                        "name": "TradeStatusChange",
                        "nodeType": "EventDefinition",
                        "parameters": {
                            "id": 1050,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1047,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "ad",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1051,
                                    "src": "764:10:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1046,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "764:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1049,
                                    "indexed": false,
                                    "mutability": "mutable",
                                    "name": "status",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1051,
                                    "src": "776:14:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 1048,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "776:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "763:28:3"
                        },
                        "src": "740:52:3"
                    },
                    {
                        "canonicalName": "SlotMarket.Trade",
                        "id": 1060,
                        "members": [
                            {
                                "constant": false,
                                "id": 1053,
                                "mutability": "mutable",
                                "name": "poster",
                                "nodeType": "VariableDeclaration",
                                "scope": 1060,
                                "src": "848:14:3",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                },
                                "typeName": {
                                    "id": 1052,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "848:7:3",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 1055,
                                "mutability": "mutable",
                                "name": "item",
                                "nodeType": "VariableDeclaration",
                                "scope": 1060,
                                "src": "872:12:3",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 1054,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "872:7:3",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 1057,
                                "mutability": "mutable",
                                "name": "price",
                                "nodeType": "VariableDeclaration",
                                "scope": 1060,
                                "src": "894:13:3",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                },
                                "typeName": {
                                    "id": 1056,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "894:7:3",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    }
                                },
                                "visibility": "internal"
                            },
                            {
                                "constant": false,
                                "id": 1059,
                                "mutability": "mutable",
                                "name": "status",
                                "nodeType": "VariableDeclaration",
                                "scope": 1060,
                                "src": "917:14:3",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                },
                                "typeName": {
                                    "id": 1058,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "917:7:3",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    }
                                },
                                "visibility": "internal"
                            }
                        ],
                        "name": "Trade",
                        "nodeType": "StructDefinition",
                        "scope": 1268,
                        "src": "825:142:3",
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "functionSelector": "1e6c598e",
                        "id": 1065,
                        "mutability": "mutable",
                        "name": "trades",
                        "nodeType": "VariableDeclaration",
                        "scope": 1268,
                        "src": "973:39:3",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$1060_storage_$",
                            "typeString": "mapping(uint256 => struct SlotMarket.Trade)"
                        },
                        "typeName": {
                            "id": 1064,
                            "keyType": {
                                "id": 1061,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "981:7:3",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                }
                            },
                            "nodeType": "Mapping",
                            "src": "973:25:3",
                            "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$1060_storage_$",
                                "typeString": "mapping(uint256 => struct SlotMarket.Trade)"
                            },
                            "valueType": {
                                "id": 1063,
                                "nodeType": "UserDefinedTypeName",
                                "pathNode": {
                                    "id": 1062,
                                    "name": "Trade",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 1060,
                                    "src": "992:5:3"
                                },
                                "referencedDeclaration": 1060,
                                "src": "992:5:3",
                                "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Trade_$1060_storage_ptr",
                                    "typeString": "struct SlotMarket.Trade"
                                }
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 1068,
                        "mutability": "mutable",
                        "name": "tradeCounter",
                        "nodeType": "VariableDeclaration",
                        "scope": 1268,
                        "src": "1019:24:3",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 1066,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "1019:7:3",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "value": {
                            "hexValue": "30",
                            "id": 1067,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1042:1:3",
                            "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                            },
                            "value": "0"
                        },
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 1075,
                            "nodeType": "Block",
                            "src": "1247:36:3",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 1073,
                                        "name": "tradeCounter",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1068,
                                        "src": "1264:12:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 1072,
                                    "id": 1074,
                                    "nodeType": "Return",
                                    "src": "1257:19:3"
                                }
                            ]
                        },
                        "functionSelector": "fe41146b",
                        "id": 1076,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getTradeCounter",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 1069,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1219:2:3"
                        },
                        "returnParameters": {
                            "id": 1072,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1071,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1076,
                                    "src": "1242:4:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1070,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1242:4:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1241:6:3"
                        },
                        "scope": 1268,
                        "src": "1195:88:3",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 1107,
                            "nodeType": "Block",
                            "src": "1586:122:3",
                            "statements": [
                                {
                                    "assignments": [
                                        1092
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 1092,
                                            "mutability": "mutable",
                                            "name": "trade",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1107,
                                            "src": "1596:18:3",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                "typeString": "struct SlotMarket.Trade"
                                            },
                                            "typeName": {
                                                "id": 1091,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 1090,
                                                    "name": "Trade",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1060,
                                                    "src": "1596:5:3"
                                                },
                                                "referencedDeclaration": 1060,
                                                "src": "1596:5:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Trade_$1060_storage_ptr",
                                                    "typeString": "struct SlotMarket.Trade"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 1096,
                                    "initialValue": {
                                        "baseExpression": {
                                            "id": 1093,
                                            "name": "trades",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1065,
                                            "src": "1617:6:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$1060_storage_$",
                                                "typeString": "mapping(uint256 => struct SlotMarket.Trade storage ref)"
                                            }
                                        },
                                        "id": 1095,
                                        "indexExpression": {
                                            "id": 1094,
                                            "name": "_trade",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1079,
                                            "src": "1624:6:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "1617:14:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Trade_$1060_storage",
                                            "typeString": "struct SlotMarket.Trade storage ref"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "1596:35:3"
                                },
                                {
                                    "expression": {
                                        "components": [
                                            {
                                                "expression": {
                                                    "id": 1097,
                                                    "name": "trade",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1092,
                                                    "src": "1649:5:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                        "typeString": "struct SlotMarket.Trade memory"
                                                    }
                                                },
                                                "id": 1098,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "poster",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1053,
                                                "src": "1649:12:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 1099,
                                                    "name": "trade",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1092,
                                                    "src": "1663:5:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                        "typeString": "struct SlotMarket.Trade memory"
                                                    }
                                                },
                                                "id": 1100,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "item",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1055,
                                                "src": "1663:10:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 1101,
                                                    "name": "trade",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1092,
                                                    "src": "1675:5:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                        "typeString": "struct SlotMarket.Trade memory"
                                                    }
                                                },
                                                "id": 1102,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "price",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1057,
                                                "src": "1675:11:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 1103,
                                                    "name": "trade",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1092,
                                                    "src": "1688:5:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                        "typeString": "struct SlotMarket.Trade memory"
                                                    }
                                                },
                                                "id": 1104,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "status",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1059,
                                                "src": "1688:12:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            }
                                        ],
                                        "id": 1105,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "1648:53:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$_t_address_$_t_uint256_$_t_uint256_$_t_bytes32_$",
                                            "typeString": "tuple(address,uint256,uint256,bytes32)"
                                        }
                                    },
                                    "functionReturnParameters": 1089,
                                    "id": 1106,
                                    "nodeType": "Return",
                                    "src": "1641:60:3"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 1077,
                            "nodeType": "StructuredDocumentation",
                            "src": "1289:99:3",
                            "text": " @dev Returns the details for a trade.\n @param _trade The id for the trade."
                        },
                        "functionSelector": "2db25e05",
                        "id": 1108,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getTrade",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 1080,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1079,
                                    "mutability": "mutable",
                                    "name": "_trade",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1108,
                                    "src": "1411:14:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1078,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1411:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1410:16:3"
                        },
                        "returnParameters": {
                            "id": 1089,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1082,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1108,
                                    "src": "1501:7:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 1081,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1501:7:3",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1084,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1108,
                                    "src": "1522:7:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1083,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1522:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1086,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1108,
                                    "src": "1543:7:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1085,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1543:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1088,
                                    "mutability": "mutable",
                                    "name": "",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1108,
                                    "src": "1564:7:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 1087,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1564:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1487:94:3"
                        },
                        "scope": 1268,
                        "src": "1393:315:3",
                        "stateMutability": "view",
                        "virtual": true,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 1149,
                            "nodeType": "Block",
                            "src": "1964:310:3",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 1117,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "1987:3:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 1118,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "1987:10:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 1121,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "2007:4:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_SlotMarket_$1268",
                                                            "typeString": "contract SlotMarket"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_SlotMarket_$1268",
                                                            "typeString": "contract SlotMarket"
                                                        }
                                                    ],
                                                    "id": 1120,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "1999:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 1119,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "1999:7:3",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 1122,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "1999:13:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "id": 1123,
                                                "name": "_item",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1111,
                                                "src": "2014:5:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 1116,
                                            "name": "transferFrom",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                1397
                                            ],
                                            "referencedDeclaration": 1397,
                                            "src": "1974:12:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 1124,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1974:46:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1125,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1974:46:3"
                                },
                                {
                                    "expression": {
                                        "id": 1136,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "baseExpression": {
                                                "id": 1126,
                                                "name": "trades",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1065,
                                                "src": "2030:6:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$1060_storage_$",
                                                    "typeString": "mapping(uint256 => struct SlotMarket.Trade storage ref)"
                                                }
                                            },
                                            "id": 1128,
                                            "indexExpression": {
                                                "id": 1127,
                                                "name": "tradeCounter",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1068,
                                                "src": "2037:12:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "nodeType": "IndexAccess",
                                            "src": "2030:20:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Trade_$1060_storage",
                                                "typeString": "struct SlotMarket.Trade storage ref"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "arguments": [
                                                {
                                                    "expression": {
                                                        "id": 1130,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "2081:3:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 1131,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2081:10:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                {
                                                    "id": 1132,
                                                    "name": "_item",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1111,
                                                    "src": "2111:5:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                {
                                                    "id": 1133,
                                                    "name": "_price",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1113,
                                                    "src": "2137:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                {
                                                    "hexValue": "4f70656e",
                                                    "id": 1134,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2165:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                                                        "typeString": "literal_string \"Open\""
                                                    },
                                                    "value": "Open"
                                                }
                                            ],
                                            "expression": {
                                                "argumentTypes": [
                                                    {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    },
                                                    {
                                                        "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                                                        "typeString": "literal_string \"Open\""
                                                    }
                                                ],
                                                "id": 1129,
                                                "name": "Trade",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1060,
                                                "src": "2053:5:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_struct$_Trade_$1060_storage_ptr_$",
                                                    "typeString": "type(struct SlotMarket.Trade storage pointer)"
                                                }
                                            },
                                            "id": 1135,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "structConstructorCall",
                                            "lValueRequested": false,
                                            "names": [
                                                "poster",
                                                "item",
                                                "price",
                                                "status"
                                            ],
                                            "nodeType": "FunctionCall",
                                            "src": "2053:129:3",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                "typeString": "struct SlotMarket.Trade memory"
                                            }
                                        },
                                        "src": "2030:152:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Trade_$1060_storage",
                                            "typeString": "struct SlotMarket.Trade storage ref"
                                        }
                                    },
                                    "id": 1137,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2030:152:3"
                                },
                                {
                                    "expression": {
                                        "id": 1140,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 1138,
                                            "name": "tradeCounter",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1068,
                                            "src": "2192:12:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "+=",
                                        "rightHandSide": {
                                            "hexValue": "31",
                                            "id": 1139,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2208:1:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_1_by_1",
                                                "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                        },
                                        "src": "2192:17:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 1141,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2192:17:3"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 1145,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "id": 1143,
                                                    "name": "tradeCounter",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1068,
                                                    "src": "2242:12:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "-",
                                                "rightExpression": {
                                                    "hexValue": "31",
                                                    "id": 1144,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2257:1:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_1_by_1",
                                                        "typeString": "int_const 1"
                                                    },
                                                    "value": "1"
                                                },
                                                "src": "2242:16:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "hexValue": "4f70656e",
                                                "id": 1146,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2260:6:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                                                    "typeString": "literal_string \"Open\""
                                                },
                                                "value": "Open"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                                                    "typeString": "literal_string \"Open\""
                                                }
                                            ],
                                            "id": 1142,
                                            "name": "TradeStatusChange",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1051,
                                            "src": "2224:17:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                                                "typeString": "function (uint256,bytes32)"
                                            }
                                        },
                                        "id": 1147,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2224:43:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1148,
                                    "nodeType": "EmitStatement",
                                    "src": "2219:48:3"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 1109,
                            "nodeType": "StructuredDocumentation",
                            "src": "1714:187:3",
                            "text": " @dev Opens a new trade. Puts _item in escrow.\n @param _item The id for the item to trade.\n @param _price The amount of currency for which to trade the item."
                        },
                        "functionSelector": "0c493fba",
                        "id": 1150,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "openTrade",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 1114,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1111,
                                    "mutability": "mutable",
                                    "name": "_item",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1150,
                                    "src": "1925:13:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1110,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1925:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 1113,
                                    "mutability": "mutable",
                                    "name": "_price",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1150,
                                    "src": "1940:14:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1112,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1940:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1924:31:3"
                        },
                        "returnParameters": {
                            "id": 1115,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1964:0:3"
                        },
                        "scope": 1268,
                        "src": "1906:368:3",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 1212,
                            "nodeType": "Block",
                            "src": "2582:368:3",
                            "statements": [
                                {
                                    "assignments": [
                                        1158
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 1158,
                                            "mutability": "mutable",
                                            "name": "trade",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1212,
                                            "src": "2592:18:3",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                "typeString": "struct SlotMarket.Trade"
                                            },
                                            "typeName": {
                                                "id": 1157,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 1156,
                                                    "name": "Trade",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1060,
                                                    "src": "2592:5:3"
                                                },
                                                "referencedDeclaration": 1060,
                                                "src": "2592:5:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Trade_$1060_storage_ptr",
                                                    "typeString": "struct SlotMarket.Trade"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 1162,
                                    "initialValue": {
                                        "baseExpression": {
                                            "id": 1159,
                                            "name": "trades",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1065,
                                            "src": "2613:6:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$1060_storage_$",
                                                "typeString": "mapping(uint256 => struct SlotMarket.Trade storage ref)"
                                            }
                                        },
                                        "id": 1161,
                                        "indexExpression": {
                                            "id": 1160,
                                            "name": "_trade",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1153,
                                            "src": "2620:6:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2613:14:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Trade_$1060_storage",
                                            "typeString": "struct SlotMarket.Trade storage ref"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "2592:35:3"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                "id": 1167,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 1164,
                                                        "name": "trade",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1158,
                                                        "src": "2645:5:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                            "typeString": "struct SlotMarket.Trade memory"
                                                        }
                                                    },
                                                    "id": 1165,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "status",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1059,
                                                    "src": "2645:12:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "hexValue": "4f70656e",
                                                    "id": 1166,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "2661:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                                                        "typeString": "literal_string \"Open\""
                                                    },
                                                    "value": "Open"
                                                },
                                                "src": "2645:22:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "5472616465206973206e6f74204f70656e2e",
                                                "id": 1168,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2669:20:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                                                    "typeString": "literal_string \"Trade is not Open.\""
                                                },
                                                "value": "Trade is not Open."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                                                    "typeString": "literal_string \"Trade is not Open.\""
                                                }
                                            ],
                                            "id": 1163,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2637:7:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 1169,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2637:53:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1170,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2637:53:3"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 1176,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 1172,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "2708:3:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 1173,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "value",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2708:9:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 1174,
                                                        "name": "trade",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1158,
                                                        "src": "2721:5:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                            "typeString": "struct SlotMarket.Trade memory"
                                                        }
                                                    },
                                                    "id": 1175,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "price",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1057,
                                                    "src": "2721:11:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2708:24:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            ],
                                            "id": 1171,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2700:7:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                                "typeString": "function (bool) pure"
                                            }
                                        },
                                        "id": 1177,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2700:33:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1178,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2700:33:3"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "expression": {
                                                    "id": 1185,
                                                    "name": "trade",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1158,
                                                    "src": "2774:5:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                        "typeString": "struct SlotMarket.Trade memory"
                                                    }
                                                },
                                                "id": 1186,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "price",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1057,
                                                "src": "2774:11:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "expression": {
                                                            "id": 1181,
                                                            "name": "trade",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 1158,
                                                            "src": "2751:5:3",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                                "typeString": "struct SlotMarket.Trade memory"
                                                            }
                                                        },
                                                        "id": 1182,
                                                        "isConstant": false,
                                                        "isLValue": true,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "poster",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 1053,
                                                        "src": "2751:12:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 1180,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2743:8:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_payable_$",
                                                        "typeString": "type(address payable)"
                                                    },
                                                    "typeName": {
                                                        "id": 1179,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2743:8:3",
                                                        "stateMutability": "payable",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 1183,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2743:21:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address_payable",
                                                    "typeString": "address payable"
                                                }
                                            },
                                            "id": 1184,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "transfer",
                                            "nodeType": "MemberAccess",
                                            "src": "2743:30:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                                "typeString": "function (uint256)"
                                            }
                                        },
                                        "id": 1187,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2743:43:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1188,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2743:43:3"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 1192,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "2817:4:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_SlotMarket_$1268",
                                                            "typeString": "contract SlotMarket"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_SlotMarket_$1268",
                                                            "typeString": "contract SlotMarket"
                                                        }
                                                    ],
                                                    "id": 1191,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2809:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 1190,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2809:7:3",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 1193,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2809:13:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 1194,
                                                    "name": "msg",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 4294967281,
                                                    "src": "2824:3:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_magic_message",
                                                        "typeString": "msg"
                                                    }
                                                },
                                                "id": 1195,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "sender",
                                                "nodeType": "MemberAccess",
                                                "src": "2824:10:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 1196,
                                                    "name": "trade",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1158,
                                                    "src": "2836:5:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                        "typeString": "struct SlotMarket.Trade memory"
                                                    }
                                                },
                                                "id": 1197,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "item",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1055,
                                                "src": "2836:10:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 1189,
                                            "name": "transferFrom",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                1397
                                            ],
                                            "referencedDeclaration": 1397,
                                            "src": "2796:12:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 1198,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2796:51:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1199,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2796:51:3"
                                },
                                {
                                    "expression": {
                                        "id": 1205,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "expression": {
                                                "baseExpression": {
                                                    "id": 1200,
                                                    "name": "trades",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1065,
                                                    "src": "2857:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$1060_storage_$",
                                                        "typeString": "mapping(uint256 => struct SlotMarket.Trade storage ref)"
                                                    }
                                                },
                                                "id": 1202,
                                                "indexExpression": {
                                                    "id": 1201,
                                                    "name": "_trade",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1153,
                                                    "src": "2864:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "2857:14:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Trade_$1060_storage",
                                                    "typeString": "struct SlotMarket.Trade storage ref"
                                                }
                                            },
                                            "id": 1203,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "status",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1059,
                                            "src": "2857:21:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "4578656375746564",
                                            "id": 1204,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "2881:10:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_05f4317aae43f6c24b2b85c6d8b21d5fa0a28cee0476cd52ca5d60d4787aab78",
                                                "typeString": "literal_string \"Executed\""
                                            },
                                            "value": "Executed"
                                        },
                                        "src": "2857:34:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "id": 1206,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2857:34:3"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "id": 1208,
                                                "name": "_trade",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1153,
                                                "src": "2924:6:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "hexValue": "4578656375746564",
                                                "id": 1209,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2932:10:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_05f4317aae43f6c24b2b85c6d8b21d5fa0a28cee0476cd52ca5d60d4787aab78",
                                                    "typeString": "literal_string \"Executed\""
                                                },
                                                "value": "Executed"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_05f4317aae43f6c24b2b85c6d8b21d5fa0a28cee0476cd52ca5d60d4787aab78",
                                                    "typeString": "literal_string \"Executed\""
                                                }
                                            ],
                                            "id": 1207,
                                            "name": "TradeStatusChange",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1051,
                                            "src": "2906:17:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                                                "typeString": "function (uint256,bytes32)"
                                            }
                                        },
                                        "id": 1210,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2906:37:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1211,
                                    "nodeType": "EmitStatement",
                                    "src": "2901:42:3"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 1151,
                            "nodeType": "StructuredDocumentation",
                            "src": "2280:244:3",
                            "text": " @dev Executes a trade. Must have approved this contract to transfer the\n amount of currency specified to the poster. Transfers ownership of the\n item to the filler.\n @param _trade The id of an existing trade"
                        },
                        "functionSelector": "02d2838b",
                        "id": 1213,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "executeTrade",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 1154,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1153,
                                    "mutability": "mutable",
                                    "name": "_trade",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1213,
                                    "src": "2551:14:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1152,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2551:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2550:16:3"
                        },
                        "returnParameters": {
                            "id": 1155,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2582:0:3"
                        },
                        "scope": 1268,
                        "src": "2529:421:3",
                        "stateMutability": "payable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 1266,
                            "nodeType": "Block",
                            "src": "3108:397:3",
                            "statements": [
                                {
                                    "assignments": [
                                        1221
                                    ],
                                    "declarations": [
                                        {
                                            "constant": false,
                                            "id": 1221,
                                            "mutability": "mutable",
                                            "name": "trade",
                                            "nodeType": "VariableDeclaration",
                                            "scope": 1266,
                                            "src": "3118:18:3",
                                            "stateVariable": false,
                                            "storageLocation": "memory",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                "typeString": "struct SlotMarket.Trade"
                                            },
                                            "typeName": {
                                                "id": 1220,
                                                "nodeType": "UserDefinedTypeName",
                                                "pathNode": {
                                                    "id": 1219,
                                                    "name": "Trade",
                                                    "nodeType": "IdentifierPath",
                                                    "referencedDeclaration": 1060,
                                                    "src": "3118:5:3"
                                                },
                                                "referencedDeclaration": 1060,
                                                "src": "3118:5:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Trade_$1060_storage_ptr",
                                                    "typeString": "struct SlotMarket.Trade"
                                                }
                                            },
                                            "visibility": "internal"
                                        }
                                    ],
                                    "id": 1225,
                                    "initialValue": {
                                        "baseExpression": {
                                            "id": 1222,
                                            "name": "trades",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1065,
                                            "src": "3139:6:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$1060_storage_$",
                                                "typeString": "mapping(uint256 => struct SlotMarket.Trade storage ref)"
                                            }
                                        },
                                        "id": 1224,
                                        "indexExpression": {
                                            "id": 1223,
                                            "name": "_trade",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1216,
                                            "src": "3146:6:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3139:14:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Trade_$1060_storage",
                                            "typeString": "struct SlotMarket.Trade storage ref"
                                        }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3118:35:3"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 1231,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 1227,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "3184:3:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 1228,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "3184:10:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "expression": {
                                                        "id": 1229,
                                                        "name": "trade",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1221,
                                                        "src": "3198:5:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                            "typeString": "struct SlotMarket.Trade memory"
                                                        }
                                                    },
                                                    "id": 1230,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "poster",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1053,
                                                    "src": "3198:12:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "3184:26:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "54726164652063616e2062652063616e63656c6c6564206f6e6c7920627920706f737465722e",
                                                "id": 1232,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3224:40:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_331e703da25b47ea750fcf81b37ecab70d142ca7619f495187e544ba2c064415",
                                                    "typeString": "literal_string \"Trade can be cancelled only by poster.\""
                                                },
                                                "value": "Trade can be cancelled only by poster."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_331e703da25b47ea750fcf81b37ecab70d142ca7619f495187e544ba2c064415",
                                                    "typeString": "literal_string \"Trade can be cancelled only by poster.\""
                                                }
                                            ],
                                            "id": 1226,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "3163:7:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 1233,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3163:111:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1234,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3163:111:3"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                "id": 1239,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 1236,
                                                        "name": "trade",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 1221,
                                                        "src": "3292:5:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                            "typeString": "struct SlotMarket.Trade memory"
                                                        }
                                                    },
                                                    "id": 1237,
                                                    "isConstant": false,
                                                    "isLValue": true,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "status",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 1059,
                                                    "src": "3292:12:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_bytes32",
                                                        "typeString": "bytes32"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "hexValue": "4f70656e",
                                                    "id": 1238,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "string",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "3308:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_stringliteral_8f5d8ba7f4bf26b6e2e2060e5bd28107042be35460fbd828c9d29a2d8af14445",
                                                        "typeString": "literal_string \"Open\""
                                                    },
                                                    "value": "Open"
                                                },
                                                "src": "3292:22:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "5472616465206973206e6f74204f70656e2e",
                                                "id": 1240,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3316:20:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                                                    "typeString": "literal_string \"Trade is not Open.\""
                                                },
                                                "value": "Trade is not Open."
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_2911decf7be1dd9e4e03f78d29e68432f60f623c391d87eb01441f5ab4f7e1cc",
                                                    "typeString": "literal_string \"Trade is not Open.\""
                                                }
                                            ],
                                            "id": 1235,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "3284:7:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 1241,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3284:53:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1242,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3284:53:3"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 1246,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "3368:4:3",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_SlotMarket_$1268",
                                                            "typeString": "contract SlotMarket"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_SlotMarket_$1268",
                                                            "typeString": "contract SlotMarket"
                                                        }
                                                    ],
                                                    "id": 1245,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "3360:7:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 1244,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "3360:7:3",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 1247,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3360:13:3",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 1248,
                                                    "name": "trade",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1221,
                                                    "src": "3375:5:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                        "typeString": "struct SlotMarket.Trade memory"
                                                    }
                                                },
                                                "id": 1249,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "poster",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1053,
                                                "src": "3375:12:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            },
                                            {
                                                "expression": {
                                                    "id": 1250,
                                                    "name": "trade",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1221,
                                                    "src": "3389:5:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_struct$_Trade_$1060_memory_ptr",
                                                        "typeString": "struct SlotMarket.Trade memory"
                                                    }
                                                },
                                                "id": 1251,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "item",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1055,
                                                "src": "3389:10:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 1243,
                                            "name": "transferFrom",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                1397
                                            ],
                                            "referencedDeclaration": 1397,
                                            "src": "3347:12:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                                "typeString": "function (address,address,uint256)"
                                            }
                                        },
                                        "id": 1252,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3347:53:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1253,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3347:53:3"
                                },
                                {
                                    "expression": {
                                        "id": 1259,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "expression": {
                                                "baseExpression": {
                                                    "id": 1254,
                                                    "name": "trades",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1065,
                                                    "src": "3410:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Trade_$1060_storage_$",
                                                        "typeString": "mapping(uint256 => struct SlotMarket.Trade storage ref)"
                                                    }
                                                },
                                                "id": 1256,
                                                "indexExpression": {
                                                    "id": 1255,
                                                    "name": "_trade",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 1216,
                                                    "src": "3417:6:3",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "3410:14:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_Trade_$1060_storage",
                                                    "typeString": "struct SlotMarket.Trade storage ref"
                                                }
                                            },
                                            "id": 1257,
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": true,
                                            "memberName": "status",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 1059,
                                            "src": "3410:21:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "43616e63656c6c6564",
                                            "id": 1258,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "string",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "3434:11:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                                                "typeString": "literal_string \"Cancelled\""
                                            },
                                            "value": "Cancelled"
                                        },
                                        "src": "3410:35:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "id": 1260,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3410:35:3"
                                },
                                {
                                    "eventCall": {
                                        "arguments": [
                                            {
                                                "id": 1262,
                                                "name": "_trade",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1216,
                                                "src": "3478:6:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "hexValue": "43616e63656c6c6564",
                                                "id": 1263,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "3486:11:3",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                                                    "typeString": "literal_string \"Cancelled\""
                                                },
                                                "value": "Cancelled"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_737a39c9fa82f68622f45ae205e399b0f0a7252140d9357a90220c542bb4ef4b",
                                                    "typeString": "literal_string \"Cancelled\""
                                                }
                                            ],
                                            "id": 1261,
                                            "name": "TradeStatusChange",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1051,
                                            "src": "3460:17:3",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                                                "typeString": "function (uint256,bytes32)"
                                            }
                                        },
                                        "id": 1264,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3460:38:3",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 1265,
                                    "nodeType": "EmitStatement",
                                    "src": "3455:43:3"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 1214,
                            "nodeType": "StructuredDocumentation",
                            "src": "2956:102:3",
                            "text": " @dev Cancels a trade by the poster.\n @param _trade The trade to be cancelled."
                        },
                        "functionSelector": "09ec6cc7",
                        "id": 1267,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "cancelTrade",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 1217,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 1216,
                                    "mutability": "mutable",
                                    "name": "_trade",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 1267,
                                    "src": "3084:14:3",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 1215,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3084:7:3",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3083:16:3"
                        },
                        "returnParameters": {
                            "id": 1218,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "3108:0:3"
                        },
                        "scope": 1268,
                        "src": "3063:442:3",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 1269,
                "src": "698:2809:3"
            }
        ],
        "src": "32:3476:3"
    },
    "functionHashes": {
        "OwnerMoneyCount(address)": "580405ba",
        "OwnerSlotCount(address)": "8871c9c5",
        "UpgradeSlot(uint256)": "27adc95e",
        "addFriend(address,address)": "10e96da5",
        "addInLevelList(uint256)": "eb320915",
        "approve(address,uint256)": "095ea7b3",
        "balanceOf(address)": "70a08231",
        "buySlot(uint256)": "ab2874cb",
        "cancelTrade(uint256)": "09ec6cc7",
        "createFarm()": "1d5ec3cb",
        "cropsList(uint256)": "a9bf928f",
        "delInCropsList(uint256)": "6099804d",
        "deleteFriend(address,address)": "72e6eaa6",
        "executeTrade(uint256)": "02d2838b",
        "friendsDict(address,uint256)": "a7a624e0",
        "getApproved(uint256)": "081812fc",
        "getFarmByOwner(address)": "575c25b0",
        "getFriendsByOwner(address)": "d13e736a",
        "getLevel(uint256)": "86481d40",
        "getTrade(uint256)": "2db25e05",
        "getTradeCounter()": "fe41146b",
        "harvest(uint256)": "ddc63262",
        "initLevelList()": "0d79e835",
        "isApprovedForAll(address,address)": "e985e9c5",
        "levelList(uint256)": "98815594",
        "modInCropsList(uint256,uint256,uint256,uint256)": "e1928ac9",
        "name()": "06fdde03",
        "openTrade(uint256,uint256)": "0c493fba",
        "owner()": "8da5cb5b",
        "ownerOf(uint256)": "6352211e",
        "plant(uint256,uint256)": "92658a28",
        "renounceOwnership()": "715018a6",
        "safeTransferFrom(address,address,uint256)": "42842e0e",
        "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
        "setApprovalForAll(address,bool)": "a22cb465",
        "setLevelUpFee(uint256)": "ccf670f8",
        "slotToOwner(uint256)": "0c10e499",
        "slots(uint256)": "387dd9e9",
        "steal(uint256)": "9bcf5f0c",
        "supportsInterface(bytes4)": "01ffc9a7",
        "symbol()": "95d89b41",
        "takeOwnership(uint256)": "b2e6ceeb",
        "tokenURI(uint256)": "c87b56dd",
        "trades(uint256)": "1e6c598e",
        "transfer(address,uint256)": "a9059cbb",
        "transferFrom(address,address,uint256)": "23b872dd",
        "transferOwnership(address)": "f2fde38b",
        "watering(uint256)": "b99c6e0a",
        "weeding(uint256)": "a5c14ec7",
        "withdraw()": "3ccfd60b"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "2694400",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "OwnerMoneyCount(address)": "1342",
            "OwnerSlotCount(address)": "1320",
            "UpgradeSlot(uint256)": "infinite",
            "addFriend(address,address)": "infinite",
            "addInLevelList(uint256)": "45476",
            "approve(address,uint256)": "24209",
            "balanceOf(address)": "1359",
            "buySlot(uint256)": "infinite",
            "cancelTrade(uint256)": "92029",
            "createFarm()": "infinite",
            "cropsList(uint256)": "6372",
            "delInCropsList(uint256)": "53521",
            "deleteFriend(address,address)": "infinite",
            "executeTrade(uint256)": "infinite",
            "friendsDict(address,uint256)": "2319",
            "getApproved(uint256)": "2268",
            "getFarmByOwner(address)": "infinite",
            "getFriendsByOwner(address)": "infinite",
            "getLevel(uint256)": "infinite",
            "getTrade(uint256)": "3922",
            "getTradeCounter()": "1160",
            "harvest(uint256)": "infinite",
            "initLevelList()": "109483",
            "isApprovedForAll(address,address)": "infinite",
            "levelList(uint256)": "2152",
            "modInCropsList(uint256,uint256,uint256,uint256)": "114429",
            "name()": "infinite",
            "openTrade(uint256,uint256)": "172054",
            "owner()": "1160",
            "ownerOf(uint256)": "1280",
            "plant(uint256,uint256)": "infinite",
            "renounceOwnership()": "24363",
            "safeTransferFrom(address,address,uint256)": "infinite",
            "safeTransferFrom(address,address,uint256,bytes)": "infinite",
            "setApprovalForAll(address,bool)": "infinite",
            "setLevelUpFee(uint256)": "21309",
            "slotToOwner(uint256)": "1259",
            "slots(uint256)": "7156",
            "steal(uint256)": "infinite",
            "supportsInterface(bytes4)": "627",
            "symbol()": "infinite",
            "takeOwnership(uint256)": "67854",
            "tokenURI(uint256)": "infinite",
            "trades(uint256)": "3880",
            "transfer(address,uint256)": "67105",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "24600",
            "watering(uint256)": "infinite",
            "weeding(uint256)": "infinite",
            "withdraw()": "infinite"
        }
    }
}